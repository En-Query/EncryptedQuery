## Configuration for a Flink-JDBC Runner on a MariaDB XETRA Data Set
name=Flink-JDBC-MariaDB-XETRA
description=Flink Engine running on a MariaDB XETRA Database
type=Batch

# Name of the DataSchema describing the fields
data.schema.name=XETRA

# Class name of the Encryption Method
.column.encryption.class.name=org.enquery.encryptedquery.responder.wideskies.common.ComputeEncryptedColumnDeRooijJNI

# Class name of the ???
.mod.pow.class.name=org.enquery.encryptedquery.encryption.impl.ModPowAbstractionJavaImpl

# JNI Library File
.jni.library.path=/opt/enquery/native-libs/libresponder.so

# Compute Threshold
.compute.threshold=30000

# Column Encryption Partition Count - How many threads to spread out processing to
.column.encryption.partition.count=90

# Class name for the JDBC Driver to access the database
.jdbc.driver=org.mariadb.jdbc.Driver

# URL to connect to the database
.jdbc.url=jdbc:mariadb://192.168.200.74:3306/enquery?user=enquery&password=enquery

# SQL query that selects the data to be queried
.jdbc.query=SELECT ISIN, Mnemonic, SecurityDesc, SecurityType,  Currency, SecurityID, DATE_FORMAT(ADDTIME(TradingDate, TradingTime), "%Y-%m-%dT%TZ") AS TadingDate, StartPrice, MaxPrice, MinPrice, EndPrice, TradedVolume, NumberOfTrades FROM XETRA

# Directory where Flink runtime is installed.
.flink.install.dir=/opt/flink

# Path to the flink-jdbc jar file.  This is the jar file implementing the query execution.
.jar.file.path=/opt/enquery/encryptedquery-flink-jdbc-2.0.1-SNAPSHOT.jar

# Path to a directory to use as the parent directory to store temporary files during the execution of the query.
.run.directory=/opt/enquery/jobs/flink

