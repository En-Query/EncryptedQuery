<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  EncryptedQuery is an open source project allowing user to query databases 
  with queries under homomorphic encryption to securing the query and
  results set from database owner inspection.
    
  Copyright (C) 2018  EnQuery LLC 
 
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as
  published by the Free Software Foundation, either version 3 of the
  License, or (at your option) any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Affero General Public License for more details.
 
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.enquery.encryptedquery</groupId>
	<artifactId>encryptedquery-parent</artifactId>
	<version>2.2.4</version>
	<packaging>pom</packaging>

	<name>EncryptedQuery</name>
	<description>Enquery EncryptedQuery is a framework for scalable Private Information Retrieval (PIR).</description>

	<inceptionYear>2018</inceptionYear>

	<organization>
		<name>EnQuery</name>
	</organization>

	<licenses>
		<license>
			<name>GNU Affero General Public License</name>
			<url>https://www.gnu.org/licenses/agpl.html</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<karaf.version>4.2.6</karaf.version>
		<osgi.version>6.0.0</osgi.version>

		<scala.version>2.10.4</scala.version>

		<flink.version>1.8.0</flink.version>
		<flink.scala.version>2.12</flink.scala.version>
		<kafka.version>2.2.0</kafka.version>
		<kafka.scala.version>2.12</kafka.scala.version>
		
		<jmh.version>1.13</jmh.version>
		<benchmarkjar.name>benchmarks</benchmarkjar.name>
		<javac.target>1.8</javac.target>
		<slf4j.version>1.7.25</slf4j.version>
		<log4j2.version>2.13.0</log4j2.version>
		<junit.version>4.12</junit.version>
		<log4j.configuration>log4j2.xml</log4j.configuration>
		<hadoop.version>3.2.0</hadoop.version>
		<encryptedquery.forkCount>1C</encryptedquery.forkCount>
		<encryptedquery.reuseForks>true</encryptedquery.reuseForks>
		<coveralls.maven.plugin>4.3.0</coveralls.maven.plugin>
		<jacoco.maven.plugin>0.7.8</jacoco.maven.plugin>
		<argLine>-Xmx1G -Djava.net.preferIPv4Stack=true</argLine>
		<jnagmp.version>2.1.0</jnagmp.version>
		<jna.version>4.5.1</jna.version>
		<gmp.version>6.1.2</gmp.version>
		<jackson.version>2.9.9</jackson.version>
		<jackson-databind.version>2.12.7.1</jackson-databind.version>

		<pax-exam.version>4.13.1</pax-exam.version>
		<camel.version>2.24.1</camel.version>
		<java.version>1.8</java.version>
		<quartz.version>2.2.3</quartz.version>

		<hibernate.version>5.4.2.Final</hibernate.version>
		<aries.jpa.version>2.7.2</aries.jpa.version>
		<!-- <aries.transaction.blueprint.version>2.1.0</aries.transaction.blueprint.version> -->
		<felix.coordinator.version>1.0.2</felix.coordinator.version>
		<aries.tx-control.version>1.0.1</aries.tx-control.version>
		<pax-jdbc.version>1.3.0</pax-jdbc.version>
		<mariadb-client.version>2.3.0</mariadb-client.version>
		<liquibase.version>3.6.1</liquibase.version>
		<snakeyaml.version>1.21</snakeyaml.version>
		<derby-db.version>10.13.1.1</derby-db.version>

		<!-- commons versions -->
		<commons-codec.version>1.11</commons-codec.version>
		<commons-io.version>2.6</commons-io.version>
		<commons-lang.version>3.5</commons-lang.version>
		<commons-net.version>3.5</commons-net.version>
		<commons-cli.version>1.4</commons-cli.version>
		<commons-collections.version>4.2</commons-collections.version>

		<!-- Google Guava version -->
		<guava.version>27.0.1-jre</guava.version>
		
		<!-- Filter predicate evaluation -->
		<libra.version>2.1.0</libra.version>
		<antlr.version>4.7</antlr.version>
		
		<derby.plugin.version>1.10</derby.plugin.version>
		<pmd.version>6.9.0</pmd.version>
		<pmd.rules.dir>${project.basedir}</pmd.rules.dir>
		<skip.pmd.check>true</skip.pmd.check>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<!-- OSGI -->
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>${osgi.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>osgi.cmpn</artifactId>
				<version>${osgi.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Karaf -->
			<dependency>
				<groupId>org.apache.karaf.shell</groupId>
				<artifactId>org.apache.karaf.shell.core</artifactId>
				<version>${karaf.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.karaf.features</groupId>
				<artifactId>framework</artifactId>
				<type>kar</type>
				<version>${karaf.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.karaf.features</groupId>
				<artifactId>standard</artifactId>
				<classifier>features</classifier>
				<type>xml</type>
				<version>${karaf.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.karaf.features</groupId>
				<artifactId>enterprise</artifactId>
				<version>${karaf.version}</version>
				<classifier>features</classifier>
				<type>xml</type>
			</dependency>

			<!-- Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
			    <groupId>org.apache.logging.log4j</groupId>
			    <artifactId>log4j-core</artifactId>
			    <version>${log4j2.version}</version>
				<scope>test</scope>
			</dependency>
						

			<!-- Database/Persistence -->
			<dependency>
				<groupId>org.apache.aries.jpa.javax.persistence</groupId>
				<artifactId>javax.persistence_2.1</artifactId>
				<version>${aries.jpa.version}</version>
				<exclusions>
	            	<exclusion>
	            		<groupId>org.slf4j</groupId>
	            		<artifactId>slf4j-api</artifactId>
	            	</exclusion>
	            </exclusions>
	            <scope>provided</scope>
			</dependency>
			<dependency>
				<!-- obsolete (use tx-control instead)-->
				<groupId>org.apache.aries.jpa</groupId>
				<artifactId>org.apache.aries.jpa.api</artifactId>
				<version>${aries.jpa.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.tx-control</groupId>
				<artifactId>tx-control-service-local</artifactId>
				<version>${aries.tx-control.version}</version>
			    <scope>provided</scope>
			</dependency>
			<dependency>
			    <groupId>org.apache.aries.tx-control</groupId>
			    <artifactId>tx-control-provider-jpa-local</artifactId>
			    <version>${aries.tx-control.version}</version>
			    <scope>provided</scope>
			</dependency>
			<dependency>
				<!-- needed for jdbc hook that runs Liquibase -->
				<groupId>org.ops4j.pax.jdbc</groupId>
				<artifactId>pax-jdbc-pool-common</artifactId>
				<version>${pax-jdbc.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-core</artifactId>
				<version>${liquibase.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>${derby-db.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derbynet</artifactId>
				<version>${derby-db.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derbyclient</artifactId>
				<version>${derby-db.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derbytools</artifactId>
				<version>${derby-db.version}</version>
			</dependency>

			<!-- YAML -->
			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${snakeyaml.version}</version>
			</dependency>

			<!-- Unit test dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.7.12</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>1.9.5</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-library</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.karaf</groupId>
				<artifactId>apache-karaf</artifactId>
				<scope>test</scope>
				<type>tar.gz</type>
				<exclusions>
					<exclusion>
						<artifactId>org.apache.karaf.client</artifactId>
						<groupId>org.apache.karaf</groupId>
					</exclusion>
				</exclusions>
				<version>${karaf.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.javax-inject</artifactId>
				<version>1_2</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.gogo.runtime</artifactId>
				<version>0.16.2</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.ops4j.pax.exam</groupId>
				<artifactId>pax-exam-container-karaf</artifactId>
				<version>${pax-exam.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.ops4j.pax.exam</groupId>
				<artifactId>pax-exam-junit4</artifactId>
				<version>${pax-exam.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Camel -->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-netty4-http</artifactId>
				<version>${camel.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel.karaf</groupId>
				<artifactId>apache-camel</artifactId>
				<type>xml</type>
				<classifier>features</classifier>
				<version>${camel.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-http4</artifactId>
				<version>${camel.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jackson</artifactId>
				<version>${camel.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test</artifactId>
				<version>${camel.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jaxb</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
			 	<groupId>org.apache.camel</groupId>
			 	<artifactId>camel-script</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-groovy</artifactId>
				<version>${camel.version}</version>
			</dependency>
			

			<!-- Apache Commons -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>3.6.1</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>${commons-net.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>${commons-cli.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections.version}</version>
			</dependency>

			<!-- Google Guava -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<!-- Hadoop -->
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-common</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.curator</groupId>
						<artifactId>curator-client</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-mapreduce-client-core</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-client</artifactId>
				<version>${hadoop.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Kafka -->
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka_${flink.scala.version}</artifactId>
				<version>${kafka.version}</version>
				<exclusions>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.scala-lang</groupId>
						<artifactId>scala-library</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Square's JNA GMP module -->
			<dependency>
				<groupId>com.squareup.jnagmp</groupId>
				<artifactId>jnagmp</artifactId>
				<version>${jnagmp.version}</version>
			</dependency>

			<!-- JMH for benchmarking the Paillier functions -->
			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-core</artifactId>
				<version>${jmh.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-generator-annprocess</artifactId>
				<version>${jmh.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Flink -->
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-java</artifactId>
				<version>${flink.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-streaming-java_${flink.scala.version}</artifactId>
				<version>${flink.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-jdbc</artifactId>
				<version>${flink.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-test-utils_${flink.scala.version}</artifactId>
				<version>${flink.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.flink</groupId>
				<artifactId>flink-connector-kafka_${flink.scala.version}</artifactId>
				<version>${flink.version}</version>
			</dependency>
			
			<!-- Misc -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.dungba</groupId>
			    <artifactId>joo-libra</artifactId>
			    <version>${libra.version}</version>
			</dependency>
			<dependency>
				<groupId>org.antlr</groupId>
				<artifactId>antlr4-runtime</artifactId>
				<version>${antlr.version}</version>
			</dependency>
			
			<!-- JSON -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-jaxb-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bnd-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.11.0</version>
				<dependencies>
                   <dependency>
                       <groupId>net.sourceforge.pmd</groupId>
                       <artifactId>pmd-core</artifactId>
                       <version>${pmd.version}</version>
                   </dependency>
				</dependencies>
				<configuration>
					<linkXRef>false</linkXRef>
					<failOnViolation>false</failOnViolation>
					<printFailingErrors>true</printFailingErrors>
					<verbose>false</verbose>
					<rulesets>
						<ruleset>file:///${pmd.rules.dir}/pmd-rules.xml</ruleset>
        			</rulesets>
        			<skip>${skip.pmd.check}</skip>
 				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
          			<artifactId>maven-antrun-plugin</artifactId>
          			<version>1.8</version>
          		</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>			
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>3.2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<!-- Use the bnd-maven-plugin and assemble the symbolic names -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-maven-plugin</artifactId>
					<version>4.2.0</version>
					<configuration>
						<bnd><![CDATA[-contract: *
                        -plugin.spring: aQute.lib.spring.SpringXMLType
                        ]]></bnd>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>bnd-process</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Required to make the maven-jar-plugin pick up the bnd generated 
					manifest. Also avoid packaging empty Jars -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
					<configuration>
						<archive>
							<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
						</archive>
						<skipIfEmpty>true</skipIfEmpty>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.21.0</version>
					<configuration>
						<systemPropertyVariables>
							<pax.exam.karaf.version>${dependency.karaf.version}</pax.exam.karaf.version>
						</systemPropertyVariables>
				        <trimStackTrace>false</trimStackTrace>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Needed if you use versionAsInProject() in Pax-Exam integration tests -->
				<plugin>
					<groupId>org.apache.servicemix.tooling</groupId>
					<artifactId>depends-maven-plugin</artifactId>
					<version>1.2</version>
					<executions>
						<execution>
							<id>generate-depends-file</id>
							<goals>
								<goal>generate-depends-file</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.karaf.tooling</groupId>
					<artifactId>karaf-maven-plugin</artifactId>
					<version>${karaf.version}</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.jvnet.jaxb2.maven2</groupId>
					<artifactId>maven-jaxb2-plugin</artifactId>
					<version>0.14.0</version>
				</plugin>
				<plugin>
					<groupId>org.carlspring.maven</groupId>
					<artifactId>derby-maven-plugin</artifactId>
					<version>${derby.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>com.soebes.maven.plugins</groupId>
					<artifactId>iterator-maven-plugin</artifactId>
					<version>0.5.1</version>
				</plugin>
				<plugin>
					<groupId>com.googlecode.maven-download-plugin</groupId>
					<artifactId>download-maven-plugin</artifactId>
					<version>1.4.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.camel</groupId>
					<artifactId>camel-maven-plugin</artifactId>
					<version>${camel.version}</version>
					<configuration>
						<useBlueprint>true</useBlueprint>
						<failOnError>true</failOnError>
						<logUnparseable>true</logUnparseable>
						<ignoreUnknownComponent>false</ignoreUnknownComponent>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
		            <artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<modules>
		<module>../core</module>
		<module>../filter</module>
		<module>../jpa</module>
		<module>../health-status</module>
		<module>../xml</module>
		<module>../json</module>
		<module>../flink</module>
		<module>../hadoop</module>
		<module>../standalone</module>
		<module>../querier</module>
		<module>../responder</module>
		<module>../paillier-encryption</module>
		<module>../null-encryption</module>
		<module>../seal-bfv-encryption</module>
	</modules>
</project>
