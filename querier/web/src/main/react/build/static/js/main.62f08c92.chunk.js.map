{"version":3,"sources":["ENQUERY_final_RGB.png","logo.svg","enqueryLogo.png","components/HomepageLayout.js","components/PageFooter.js","components/FixedMenu.js","components/TableRowWithCheckbox.js","components/CreateQuerySchema.js","components/CreateQuery.js","components/QueryStatus.js","components/ScheduleQuery.js","components/QueryResults.js","components/QuerySchedulesStatus.js","components/PageHeader.js","components/PageNotFound.js","components/Tabs.js","components/TableRowWithSlider.js","components/OfflineMode.js","components/Versions.js","components/Overview.js","routes/index.js","registerServiceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","CustomSegment","styled","Segment","_templateObject","HomepageHeading","_ref","mobile","react_default","a","createElement","Container","text","Header","as","style","fontSize","fontWeight","marginBottom","marginTop","Image","src","HeaderLogo","width","height","content","inverted","Button","primary","size","Link","name","to","Icon","DesktopContainer","state","hideFixedMenu","_this","setState","fixed","showFixedMenu","handleItemClick","e","_ref2","activeItem","children","this","props","_this$state","textAlign","minHeight","padding","vertical","Sticky","Menu","margin","Item","className","header","active","onClick","position","textDecoration","href","target","HomepageLayout_HomepageHeading","Component","MobileContainer","handleSidebarHide","_this2","sidebarOpened","_ref3","handleToggle","_this$state2","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","visible","Pusher","dimmed","pointing","secondary","ResponsiveContainer","_ref4","HomepageLayout_DesktopContainer","HomepageLayout_MobileContainer","HomepageLayout","HomepageLayout_ResponsiveContainer","Grid","container","stackable","verticalAlign","Row","Column","floated","bordered","rounded","celled","columns","paddingBottom","paddingTop","Divider","horizontal","textTransform","List","ordered","Content","Description","divided","link","PageFooter","FixedMenu_HomepageHeading","FixedMenu_DesktopContainer","PageHeading","FixedMenu_ResponsiveContainer","lengthTypeOptions","key","value","TableRowWithSlider","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","checkbox","fieldCheckbox","console","log","_this$props","dataType","isArray","box","isChecked","initialState","lengthType","_this$props2","handleChange","onLengthTypeChange","Fragment","Table","Checkbox","onChange","Cell","JSON","stringify","Dropdown","placeholder","clearable","selection","search","fluid","noResultsMessage","label","multiple","options","disabled","Input","type","min","maxArrayElements","max","React","CreateQuerySchema","getSchemas","asyncToGenerator","regenerator_default","mark","_callee","data","dataschemas","wrap","_context","prev","next","axios","method","url","headers","Accept","sent","isLoading","t0","error","Error","concat","message","stop","handleSchemaChange","dataSchemaName","schema","find","selfUri","then","response","fields","selectedId","id","querySchemasUri","localStorage","setItem","handleQuerySchemaNameChange","querySchemaName","handleSelectorFieldChange","selectorField","selectedFields","some","elem","toConsumableArray","map","objectSpread","defineProperty","_ref5","textContent","currentTarget","handleCancel","event","reset","handleSubmit","preventDefault","querySchemaUri","getItem","Content-Type","history","push","_ref6","filter","f","fieldNames","display","flexDirection","FixedMenu","flex","justifyContent","alignItems","Form","onSubmit","Field","required","scrolling","field","compact","definition","selectable","fullWidth","HeaderCell","Body","values","_ref7","TableRowWithCheckbox_TableRowWithSlider","keys","includes","bind","positive","PageFooter_PageFooter","require","CreateQuery","addSelectorValue","stopPropagation","selectorValues","selectorValue","replace","split","str","trim","handleSelectorValueChange","_callee2","_context2","queryschemaUri","getQuerySchemas","_x","_x2","apply","arguments","_callee3","_ref9","queryschemas","_context3","handleQuerySchemaChange","_ref11","_callee4","_ref10","_ref12","queryschema","_context4","querySchemaId","querySchemaSelfUri","queriesUri","_x3","_x4","_ref13","dataChunkSize","handleQueryNameChange","_ref14","queryName","embededSelector","parameters","embedSelector","index","_","i","readOnly","Popup","trigger","icon","circular","TextArea","length","color","Card","basic","removeSelectorValue","QueryStatus","_ref8","getQueryData","_callee5","queries","_context5","querySelfUri","handleSort","clickedColumn","column","direction","reverse","sortBy","handleButtonView","status","scheduleQuery","viewSchedules","scheduleAgain","_callee6","_context6","_x5","_x6","_callee7","_context7","_x7","_x8","_ref15","_callee8","_context8","_x9","_x10","getData","interval","setInterval","clearInterval","_this3","match","params","sortable","sorted","_ref16","withRouter","offsetOptions","description","submissionOptions","StreamingParams","kafkaOffset","onKafkaOffsetSelectionChange","checked","maxHitsPerSelector","step","handleCheckboxChange","runTimeSeconds","windowLengthSeconds","BatchParams","classNam","ScheduleQuery","_this4","query","includedData","dataSourceInfo","dataSourcesUri","querySchemaInfo","included","element","schedulesUri","dataSourceUri","getDataSources","datasources","dataSourceChange","source","datasource","dataSourceName","dataSourceId","dataSourceSelfUri","processingMode","dateChange","date","handleKafkaOffsetSelectionChange","handleSubmissionValue","submissionValue","_this4$state","startTime","dataSource","stream.window.length.seconds","kafka.start.offset","stream.runtime.seconds","undefined","handleSave","_this4$state2","Date","assertThisInitialized","_this5","dataSourceDescription","yesterday","location","histoy","Datetime","moment","subtract","ScheduleQuery_BatchParams","ScheduleQuery_StreamingParams","newCheckState","DateTime_default","input","isValidDate","today","isAfter","open","utc","onClickDay","alert","indexTuple","reduce","slicedToArray","k","v","QueryResults","getResultsList","resultsUri","results","getResultsData","fetchSelfUri","fetchResultsSelfUri","retrievalUriList","resultsSelfUriList","retrievalUris","resultObjects","retrievalsUri","Promise","all","getDecryptionUris","decryptionsUri","decryptionResponse","prevState","decryptionUris","localforage","sendRetrieval","sendDecryption","renderButtonView","idx","localforageStore","windowStartTime","windowEndTime","format","QuerySchedulesStatus","getSchedulesList","querySelfUriResponse","querySchedulesUriResponse","schedules","querySchedulesUri","getScheduleResultUris","resultUriList","resultUris","getDataSourceNames","schedule","dataSourceNames","flatMap","memo","getResultDetails","direciton","exportSlider","Message","PageHeader_templateObject","Visibility","once","onBottomPassed","onBottomPassedReverse","PageHeader_CustomSegment","PageHeader_HomepageHeading","PageHeader_DesktopContainer","PageHeader_MobileContainer","PageHeader_ResponsiveContainer","PageNotFound","PageHeader","defaultDropdownOptions","ExportSchedulesDropdowns","dropdownOptionsDataSchema","dropdownOptionsQuerySchema","dropdownOptionsQuery","Tab","Pane","slider","slide","isExported","OfflineMode","nessage","handleQueryChange","_query","queryId","getSchedules","_ref17","_ref18","obj","s","Number","schedulesToExport","newSchedulesToExport","onFormSubmit","fileUpload","file","fileChange","files","fileName","formData","FormData","append","statusCode","resultUpload","resultFormSubmit","exportSchedules","_ref19","_ref20","blob","scheduleIds","scheduleDataToBeExported","Blob","document","URL","createObjectURL","download","click","scheduleIdsToExport","panes","menuItem","render","attached","htmlFor","animated","hidden","Progress","percent","success","progress","Tabs_ExportSchedulesDropdowns","warning","Dimmer","Loader","_ref21","TableRowWithSlider_TableRowWithSlider","Footer","colSpan","labelPosition","menu","Versions","Subheader","paddingLeft","StyledLink","Overview_templateObject","Docs","lib","activeStyle","bulleted","Overview","contextRef","createRef","centered","Ref","innerRef","Overview_Docs","Rail","offset","context","smooth","routes","HashRouter","Switch","Route","path","component","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","process","origin","addEventListener","fetch","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.62f08c92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ENQUERY_final_RGB.1f177dda.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/enqueryLogo.489c6c78.png\";","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../enqueryLogo.png\";\nimport HeaderLogo from \"../ENQUERY_final_RGB.png\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar,\n  Visibility,\n  Sticky\n} from \"semantic-ui-react\";\nimport \"../css/styles.css\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nconst CustomSegment = styled(Segment)`\n  &&& {\n    background-color: gray;\n  }\n`;\n\nconst HomepageHeading = ({ mobile }) => (\n  <Container text>\n    <Header\n      as=\"h1\"\n      style={{\n        fontSize: mobile ? \"2em\" : \"4em\",\n        fontWeight: \"normal\",\n        marginBottom: 0,\n        marginTop: mobile ? \"1.5em\" : \"3em\"\n      }}\n    >\n      <Image src={HeaderLogo} style={{ width: \"360px\", height: \"auto\" }} />\n    </Header>\n    <Header\n      as=\"h2\"\n      content=\"Start by creating a Query Schema\"\n      inverted\n      style={{\n        fontSize: mobile ? \"1.5em\" : \"1.7em\",\n        fontWeight: \"normal\",\n        marginTop: mobile ? \"0.5em\" : \"1.5em\"\n      }}\n    />\n    <Button\n      primary\n      size=\"huge\"\n      as={Link}\n      name=\"createQuerySchema\"\n      to=\"/createqueryschema\"\n      style={{ marginTop: \"30px\" }}\n    >\n      Get Started\n      <Icon name=\"right arrow\" />\n    </Button>\n  </Container>\n);\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => this.setState({ fixed: false });\n  showFixedMenu = () => this.setState({ fixed: true });\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { children } = this.props;\n    const { fixed, activeItem } = this.state;\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <CustomSegment\n          textAlign=\"center\"\n          style={{ minHeight: 700, padding: \"0em 0em\" }}\n          vertical\n        >\n          <Sticky>\n            <Menu inverted style={{ margin: 0 }} size=\"large\">\n              <Container>\n                <Menu.Item className=\"menu_color_white\" header>\n                  EnQuery\n                </Menu.Item>\n                <Menu.Item\n                  className=\"menu_color_white\"\n                  as={Link}\n                  to=\"/\"\n                  name=\"home\"\n                  active={activeItem === \"home\"}\n                  onClick={this.handleItemClick}\n                >\n                  Home\n                </Menu.Item>\n                <Menu.Item\n                  className=\"menu_color_white\"\n                  as={Link}\n                  to=\"/createqueryschema\"\n                  name=\"createQuerySchema\"\n                  active={activeItem === \"createQuerySchema\"}\n                  onClick={this.handleItemClick}\n                >\n                  Create Query Schema\n                </Menu.Item>\n\n                <Menu.Item\n                  className=\"menu_color_white\"\n                  as={Link}\n                  to=\"/createquery\"\n                  name=\"createQuery\"\n                  active={activeItem === \"createQuery\"}\n                  onClick={this.handleItemClick}\n                >\n                  Create Query\n                </Menu.Item>\n                <Menu.Item\n                  className=\"menu_color_white\"\n                  as={Link}\n                  to=\"/querystatus\"\n                  name=\"queryStatus\"\n                  active={activeItem === \"queryStatus\"}\n                  onClick={this.handleItemClick}\n                >\n                  Query Status\n                </Menu.Item>\n                <Menu.Menu position=\"right\">\n                  <Menu.Item\n                    className=\"menu_color_white\"\n                    as={Link}\n                    to=\"/overview\"\n                    name=\"overview\"\n                    active={activeItem === \"overview\"}\n                    onClick={this.handleItemClick}\n                    position=\"right\"\n                  >\n                    Docs\n                  </Menu.Item>\n                  <Menu.Item\n                    className=\"menu_color_white\"\n                    as={Link}\n                    to=\"/offline\"\n                    name=\"offline\"\n                    active={activeItem === \"offline\"}\n                    onClick={this.handleItemClick}\n                    position=\"right\"\n                  >\n                    Offline Mode\n                  </Menu.Item>\n                  <Menu.Item\n                    className=\"menu_color_white\"\n                    as={Link}\n                    to=\"/versions\"\n                    name=\"versions\"\n                    active={activeItem === \"versions\"}\n                    onClick={this.handleItemClick}\n                    position=\"right\"\n                    style={{ textDecoration: \"underline\" }}\n                  >\n                    2.1.2\n                  </Menu.Item>\n                  <Menu.Item\n                    className=\"menu_color_white\"\n                    position=\"right\"\n                    href=\"https://github.com/En-Query/EncryptedQuery\"\n                    target=\"_blank\"\n                  >\n                    <Icon name=\"github\" size=\"big\" />\n                  </Menu.Item>\n                </Menu.Menu>\n              </Container>\n            </Menu>\n          </Sticky>\n          <HomepageHeading />\n        </CustomSegment>\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node\n};\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const { children } = this.props;\n    const { sidebarOpened, activeItem } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"push\"\n          inverted\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item header>EnQuery</Menu.Item>\n          <Menu.Item\n            as={Link}\n            to=\"/\"\n            name=\"home\"\n            active={activeItem === \"home\"}\n            onClick={this.handleItemClick}\n          >\n            Home\n          </Menu.Item>\n          <Menu.Item\n            as={Link}\n            to=\"/createqueryschema\"\n            name=\"createqueryschema\"\n            active={activeItem === \"createQuerySchema\"}\n            onClick={this.handleItemClick}\n          >\n            Create Query Schema\n          </Menu.Item>\n\n          <Menu.Item\n            as={Link}\n            to=\"/createquery\"\n            name=\"createQuery\"\n            active={activeItem === \"createQuery\"}\n            onClick={this.handleItemClick}\n          >\n            Create Query\n          </Menu.Item>\n\n          <Menu.Item\n            as={Link}\n            to=\"/querystatus\"\n            name=\"queryStatus\"\n            active={activeItem === \"queryStatus\"}\n            onClick={this.handleItemClick}\n          >\n            Query Status\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: 350, padding: \"1em 0em\" }}\n            vertical\n          >\n            <Container>\n              <Menu inverted pointing secondary size=\"large\">\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name=\"sidebar\" />\n                </Menu.Item>\n              </Menu>\n            </Container>\n            <HomepageHeading mobile />\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node\n};\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n);\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node\n};\n\nconst HomepageLayout = () => (\n  <ResponsiveContainer>\n    <Segment style={{ padding: \"8em 0em\" }} vertical>\n      <Grid container stackable verticalAlign=\"middle\">\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n              Ask a secret question | Get a secret answer\n            </Header>\n            <p style={{ fontSize: \"1.33em\" }}>\n              Encrypted Query is designed to allow a user to query a remote\n              database without revealing the contents of the query or the\n              results from the database server.\n            </p>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={6}>\n            <Image bordered rounded size=\"large\" src={HeaderLogo} />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column textAlign=\"center\">\n            <Button size=\"huge\">\n              <a href=\"https://enquery.net\">Learn More</a>\n            </Button>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n    <Segment style={{ padding: \"0em\" }} vertical>\n      <Grid celled=\"internally\" columns=\"equal\" stackable>\n        <Grid.Row textAlign=\"center\">\n          <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n              \"Cybersecurity Built on Decades of Experience\"\n            </Header>\n            <p style={{ fontSize: \"1.33em\" }}>\n              EnQuery’s team has decades of experience in the areas of advanced\n              mathematics, cryptography, embedded and enterprise software\n              development, as well as hardware designs and implementations.\n            </p>\n          </Grid.Column>\n          <Grid.Column style={{ paddingBottom: \"5em\", paddingTop: \"5em\" }}>\n            <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n              TAKING PRIVACY TO A NEW HORIZON\n            </Header>\n            <p style={{ fontSize: \"1.33em\" }}>\n              Our enterprise development team has built a scalable,\n              maintainable, and easy-to-deploy solution for batch and stream\n              processing. We are attaining new heights in cryptographically\n              secure systems, and we are using math—not magic—to do it.\n            </p>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n    <Segment style={{ padding: \"9em 0em\" }} vertical>\n      <Container text textAlign=\"center\">\n        <Divider\n          as=\"h4\"\n          className=\"header\"\n          horizontal\n          style={{ margin: \"3em 0em\", textTransform: \"uppercase\" }}\n        >\n          <a href=\"https://github.com/En-Query/EncryptedQuery/blob/master/Running-README.md\">\n            End-to-End examples\n          </a>\n        </Divider>\n        <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n          UI Overview\n        </Header>\n        <Container\n          textAlign=\"left\"\n          style={{ width: \"300px\", padding: \"0 0 0 40px\" }}\n        >\n          <List ordered>\n            <List.Item as={Link} to=\"/createqueryschema\">\n              Create Query Schema\n            </List.Item>\n            <List.Item as={Link} to=\"/createquery\">\n              Create Query\n            </List.Item>\n            <List.Item as={Link} to=\"/schedulequery\">\n              Schedule Query\n              <List.List>\n                <List.Item as=\"a\">Choose parameters</List.Item>\n                <List.Item>\n                  <List.Icon name=\"calendar alternate\" />\n                  Pick a date\n                </List.Item>\n              </List.List>\n            </List.Item>\n            <List.Item as={Link} to=\"/querystatus\">\n              Query Status\n              <List.Content>\n                <List.Description>\n                  Status page for scheduled queries\n                </List.Description>\n              </List.Content>\n            </List.Item>\n          </List>\n        </Container>\n        <Button as=\"a\" size=\"large\" style={{ marginTop: \"30px\" }}>\n          Further Explanation\n        </Button>\n      </Container>\n    </Segment>\n    <Segment inverted vertical style={{ padding: \"5em 0em\" }}>\n      <Container>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={3}>\n              <Header inverted as=\"h4\" content=\"About\" />\n              <List link inverted>\n                <List.Item>\n                  <a href=\"https://enquery.net/contact-us\">Contact Us</a>\n                </List.Item>\n                <List.Item>\n                  <a href=\"https://github.com/En-Query/EncryptedQuery/blob/master/README.md\">\n                    Documentation\n                  </a>\n                </List.Item>\n                <List.Item>\n                  <a href=\"https://github.com/En-Query/EncryptedQuery\">\n                    GitHub\n                  </a>\n                </List.Item>\n                <List.Item>\n                  <a href=\"https://github.com/En-Query/EncryptedQuery/blob/master/Release-Notes.md\">\n                    Release Notes\n                  </a>\n                </List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Header inverted as=\"h4\" content=\"Services\" />\n              <List link inverted>\n                <List.Item as=\"a\">FAQ</List.Item>\n                <List.Item as=\"a\">How To Access</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={7}>\n              <Header as=\"h4\" inverted>\n                EnQuery\n              </Header>\n              <p>Copyright (C) 2018 EnQuery LLC</p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Segment>\n  </ResponsiveContainer>\n);\n\nexport default HomepageLayout;\n","import React, { Component } from \"react\";\nimport { Grid, Segment, Container, List, Header } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class PageFooter extends Component {\n  render() {\n    return (\n      <div style={{ marginTop: \"20px\" }}>\n        <Segment inverted vertical style={{ padding: \"5em 0em\" }}>\n          <Container>\n            <Grid divided inverted stackable>\n              <Grid.Row>\n                <Grid.Column width={3}>\n                  <Header inverted as=\"h4\" content=\"About\" />\n                  <List link inverted>\n                    <List.Item>\n                      <a href=\"https://enquery.net/contact-us\">Contact Us</a>\n                    </List.Item>\n                    <List.Item>\n                      <a href=\"https://github.com/En-Query/EncryptedQuery/blob/master/README.md\">\n                        Documentation\n                      </a>\n                    </List.Item>\n                    <List.Item>\n                      <a href=\"https://github.com/En-Query/EncryptedQuery\">\n                        GitHub\n                      </a>\n                    </List.Item>\n                    <List.Item>\n                      <a href=\"https://github.com/En-Query/EncryptedQuery/blob/master/Release-Notes.md\">\n                        Release Notes\n                      </a>\n                    </List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={3}>\n                  <Header inverted as=\"h4\" content=\"Services\" />\n                  <List link inverted>\n                    <List.Item as=\"a\">FAQ</List.Item>\n                    <List.Item as=\"a\">How To Access</List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={3}>\n                  <Header inverted as=\"h4\" content=\"Pages\" />\n                  <List link inverted>\n                    <List.Item>\n                      <a href=\"#createqueryschema\">Create Query Schema</a>\n                    </List.Item>\n                    <List.Item>\n                      <a href=\"#createquery\">Create Query</a>\n                    </List.Item>\n                    <List.Item>\n                      <a href=\"#querystatus\">Query Status</a>\n                    </List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={7}>\n                  <Header as=\"h4\" inverted>\n                    EnQuery\n                  </Header>\n                  <p>Copyright (C) 2018 EnQuery LLC</p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </Segment>\n      </div>\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Menu,\n  Responsive,\n  Segment,\n  Sticky,\n  Sidebar,\n  Visibility\n} from \"semantic-ui-react\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nconst HomepageHeading = ({ mobile }) => <Container text />;\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { children } = this.props;\n    const { fixed, activeItem } = this.state;\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Sticky>\n          <Menu fixed=\"top\" inverted>\n            <Container>\n              <Menu.Item\n                as={Link}\n                to=\"/\"\n                name=\"home\"\n                active={activeItem === \"home\"}\n                onClick={this.handleItemClick}\n              >\n                EnQuery\n              </Menu.Item>\n              <Menu.Item\n                as={Link}\n                to=\"/versions\"\n                name=\"versions\"\n                active={activeItem === \"versions\"}\n                onClick={this.handleItemClick}\n                style={{ textDecoration: \"underline\" }}\n              >\n                2.1.2\n              </Menu.Item>\n\n              <Menu.Menu position=\"right\">\n                <Menu.Item\n                  as={Link}\n                  to=\"/overview\"\n                  name=\"overview\"\n                  active={activeItem === \"overview\"}\n                  onClick={this.handleItemClick}\n                  position=\"right\"\n                >\n                  Docs\n                </Menu.Item>\n                <Menu.Item\n                  as={Link}\n                  to=\"/offline\"\n                  name=\"offline\"\n                  active={activeItem === \"admin\"}\n                  onClick={this.handleItemClick}\n                  position=\"right\"\n                >\n                  Offline Mode\n                </Menu.Item>\n                <Menu.Item\n                  className=\"menu_color_white\"\n                  position=\"right\"\n                  href=\"https://github.com/En-Query/EncryptedQuery\"\n                  target=\"_blank\"\n                >\n                  <Icon name=\"github\" size=\"big\" />\n                </Menu.Item>\n              </Menu.Menu>\n            </Container>\n          </Menu>\n        </Sticky>\n        <HomepageHeading />\n\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node\n};\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>{\" \"}\n  </div>\n);\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node\n};\n\nconst PageHeading = () => <ResponsiveContainer />;\nexport default PageHeading;\n","import React, { Component } from \"react\";\nimport { Table, Checkbox, Dropdown, Input } from \"semantic-ui-react\";\n\nconst lengthTypeOptions = [\n  { key: \" fixed\", text: \"Fixed\", value: \"fixed\" },\n  { key: \"variable\", text: \"variable\", value: \"variable\" }\n];\n\nexport default class TableRowWithSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    const { initialState } = this.props;\n    this.state = {\n      fieldCheckbox: initialState,\n      lengthType: \"\"\n    };\n  }\n\n  checkbox = () => {\n    this.setState({ fieldCheckbox: !this.state.fieldCheckbox }, () => {\n      console.log(\"checkbox --> \", this.state.fieldCheckbox);\n      const { name, dataType, isArray, position, box } = this.props;\n      box({\n        name,\n        dataType,\n        isArray,\n        position,\n        isChecked: this.state.fieldCheckbox\n      });\n    });\n  };\n\n  render() {\n    const {\n      name,\n      dataType,\n      isArray,\n      position,\n      handleChange,\n      lengthType,\n      onLengthTypeChange\n    } = this.props;\n    const { fieldCheckbox } = this.state;\n    return (\n      <React.Fragment>\n        <Table.Row>\n          <Checkbox\n            style={{ marginTop: \"20px\" }}\n            checkbox\n            onChange={this.checkbox}\n          />\n          <Table.Cell>{name}</Table.Cell>\n          <Table.Cell>{dataType}</Table.Cell>\n          <Table.Cell>{JSON.stringify(isArray)}</Table.Cell>\n          <Table.Cell>{position}</Table.Cell>\n          <Table.Cell>\n            <Dropdown\n              placeholder=\"Pick a length Type:\"\n              clearable\n              selection\n              search\n              fluid\n              noResultsMessage=\"Please search again\"\n              label=\"lengthType\"\n              multiple={false}\n              options={lengthTypeOptions}\n              header=\"Choose a Length Type\"\n              onChange={e => onLengthTypeChange(e, name)}\n              value={lengthType}\n              disabled={!this.state.fieldCheckbox}\n            />\n          </Table.Cell>\n          <Table.Cell>\n            <Input\n              onChange={e => handleChange(e, name)}\n              value={this.state.size}\n              type=\"number\"\n              name=\"size\"\n              min=\"1\"\n              placeholder=\"1\"\n              disabled={!this.state.fieldCheckbox}\n            />\n          </Table.Cell>\n          <Table.Cell>\n            <Input\n              onChange={e => handleChange(e, name)}\n              value={this.state.maxArrayElements}\n              type=\"number\"\n              name=\"maxArrayElements\"\n              placeholder=\"1\"\n              min=\"1\"\n              max=\"100\"\n              disabled={!this.state.fieldCheckbox}\n            />\n          </Table.Cell>\n        </Table.Row>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component, createRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Dropdown,\n  Segment,\n  Header,\n  Divider,\n  Container,\n  Grid,\n  List,\n  Form,\n  Loader,\n  Input,\n  Table,\n  Button,\n  Icon,\n  Rail,\n  Sticky,\n  Ref\n} from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Checkbox, CheckboxGroup } from \"react-checkbox-group\";\n\nimport PageFooter from \"./PageFooter\";\nimport PageHeading from \"./FixedMenu\";\nimport TableRowWithCheckbox from \"./TableRowWithCheckbox\";\n\nimport axios from \"axios\";\n\nconst lengthTypeOptions = [\n  {\n    key: \"fixed\",\n    text: \"Fixed\",\n    value: \"fixed\",\n    description: \"lengthType of fixed\"\n  },\n  {\n    key: \"variable\",\n    text: \"Variable\",\n    value: \"variable\",\n    description: \"lengthType of variable\"\n  }\n];\n\nconst ReferenceTable = () => (\n  <Table celled columns={3}>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Member</Table.HeaderCell>\n        <Table.HeaderCell>Data type</Table.HeaderCell>\n        <Table.HeaderCell>Description</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n\n    <Table.Body>\n      <Table.Row>\n        <Table.Cell>lengthType</Table.Cell>\n        <Table.Cell>string</Table.Cell>\n        <Table.Cell>Type of length: fixed/variable</Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>size</Table.Cell>\n        <Table.Cell>int</Table.Cell>\n        <Table.Cell>Size of bytes to return</Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>maxArrayElements</Table.Cell>\n        <Table.Cell>int</Table.Cell>\n        <Table.Cell>If array, how many elements to return</Table.Cell>\n      </Table.Row>\n    </Table.Body>\n  </Table>\n);\n\nclass CreateQuerySchema extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataschemas: [],\n      dataSchemaName: \"\",\n      querySchemaName: \"\",\n      fields: [],\n      selectorField: \"\",\n      size: {},\n      lengthType: \"\",\n      maxArrayElements: {},\n      fieldNames: [],\n      isLoading: true,\n      fieldCheckbox: false,\n      selectedFields: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.getSchemas();\n  }\n\n  getSchemas = async () => {\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: \"/querier/api/rest/dataschemas\",\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      const dataschemas = data.data;\n\n      this.setState({ dataschemas: dataschemas, isLoading: false });\n\n      console.log(\"This is the dataschema list:\", dataschemas);\n    } catch (error) {\n      console.error(Error(`Error fetching results list: ${error.message}`));\n    }\n  };\n\n  handleSchemaChange = (e, { value }) => {\n    this.setState({ dataSchemaName: value }, () => {\n      console.log(\"Chosen dataSchema ---> \", this.state.dataSchemaName);\n      //also send a request the selfUri of the selected dataSchema\n    });\n    const schema = this.state.dataschemas.find(schema => schema.name === value);\n    if (schema) {\n      axios({\n        method: \"get\",\n        url: schema.selfUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      })\n        .then(response => {\n          console.log(response);\n          this.setState({\n            fields: response.data.data.fields,\n            selectedId: response.data.data.id,\n            querySchemasUri: response.data.data.querySchemasUri\n          });\n          console.log(this.state.fields);\n          console.log(this.state.selectedId);\n          console.log(this.state.querySchemasUri);\n          localStorage.setItem(\"querySchemasUri\", this.state.querySchemasUri);\n        })\n        .catch(error => console.log(error.response));\n    }\n  };\n\n  handleQuerySchemaNameChange = e => {\n    this.setState({ querySchemaName: e.target.value });\n  };\n\n  handleSelectorFieldChange = (e, { value }) => {\n    this.setState({ selectorField: value }, () => {\n      console.log(\"Chosen selectorField ---> \", this.state.selectorField);\n    });\n  };\n\n  handleChange = (e, name) => {\n    const { selectedFields } = this.state;\n    if (selectedFields.some(elem => elem.name === name)) {\n      this.setState({\n        selectedFields: [\n          ...selectedFields.map(\n            elem =>\n              elem.name !== name\n                ? elem\n                : {\n                    ...elem,\n                    name,\n                    [e.target.name]: e.target.value\n                  }\n          )\n        ]\n      });\n    }\n  };\n\n  onLengthTypeChange = ({ currentTarget: { textContent } }, name) => {\n    const { selectedFields } = this.state;\n    if (selectedFields.some(elem => elem.name === name)) {\n      this.setState({\n        selectedFields: selectedFields.map(\n          elem =>\n            elem.name !== name\n              ? elem\n              : {\n                  name,\n                  lengthType: textContent\n                }\n        )\n      });\n    }\n  };\n\n  handleCancel = event => {\n    event.target.reset();\n  };\n\n  handleSubmit = event => {\n    const { selectedFields, selectorField, querySchemaName } = this.state;\n    console.log(JSON.stringify(selectedFields));\n    event.preventDefault();\n    const querySchemaUri = localStorage.getItem(\"querySchemasUri\");\n    axios({\n      method: \"post\",\n      url: `${querySchemaUri}`,\n      headers: {\n        Accept: \"application/vnd.encryptedquery.enclave+json; version=1\",\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        name: querySchemaName,\n        selectorField: selectorField,\n        fields: selectedFields\n      })\n    })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => console.log(error.response));\n    this.props.history.push(\"/createquery\");\n  };\n\n  checkbox = ({ name, isChecked }) => {\n    //handle check box of each fieldName\n    if (isChecked === true) {\n      //checked conditional\n      this.setState(\n        { selectedFields: [...this.state.selectedFields, { name }] },\n        () => {\n          console.log(\n            \"callback in  isChecked if conditional\",\n            this.state.selectedFields\n          );\n        }\n      );\n    } else {\n      this.setState(\n        {\n          selectedFields: this.state.selectedFields.filter(f => f.name !== name)\n        },\n        () => {\n          console.log(\n            `box unchecked, deleted from object --->`,\n            this.state.selectedFields\n          );\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      dataschemas,\n      dataSchemaName,\n      querySchemaName,\n      fields,\n      selectorField,\n      fieldNames,\n      lengthType,\n      size,\n      maxArrayElements,\n      selectedFields\n    } = this.state;\n\n    return (\n      <div\n        style={{ display: \"flex\", minHeight: \"100vh\", flexDirection: \"column\" }}\n      >\n        <PageHeading />\n        <div style={{ flex: 1 }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flex: \"1\"\n            }}\n          >\n            <div style={{ width: \"1100px\" }}>\n              <Form onSubmit={this.handleSubmit}>\n                <Segment style={{ padding: \"5em 1em\" }} vertical>\n                  <Divider horizontal>Query Schema Information</Divider>\n                  <Form.Field required>\n                    <label>Query Schema Name: </label>\n                    <Input\n                      placeholder=\"Enter Query Schema Name\"\n                      name=\"querySchemaName\"\n                      value={querySchemaName}\n                      onChange={this.handleQuerySchemaNameChange}\n                      required\n                    />\n                  </Form.Field>\n                  <Form.Field required>\n                    <label>Select a Data Schema</label>\n                    <Dropdown\n                      placeholder=\"Select data schema\"\n                      scrolling\n                      clearable\n                      fluid\n                      selection\n                      search\n                      noResultsMessage=\"Try a different Search\"\n                      multiple={false}\n                      options={dataschemas.map(schema => {\n                        return {\n                          key: schema.id,\n                          text: schema.name,\n                          value: schema.name\n                        };\n                      })}\n                      header=\"PLEASE SELECT A DATASCHEMA\"\n                      value={dataSchemaName}\n                      onChange={this.handleSchemaChange}\n                    />\n                  </Form.Field>\n                  <Form.Field required>\n                    <label>Choose a Selector Field </label>\n                    <Dropdown\n                      placeholder=\"Pick a selector field\"\n                      clearable\n                      fluid\n                      selection\n                      search\n                      noResultsMessage=\"Please search again\"\n                      multiple={false}\n                      options={fields.map(field => {\n                        return {\n                          key: field.id,\n                          text: field.name,\n                          value: field.name\n                        };\n                      })}\n                      header=\"CHOOSE A SELECTOR FIELD\"\n                      value={selectorField}\n                      onChange={this.handleSelectorFieldChange}\n                      required\n                    />\n                  </Form.Field>\n                  <Divider style={{ marginTop: \"2em\" }} horizontal>\n                    Field(s) Selection\n                  </Divider>\n                  <Table celled compact definition selectable>\n                    <Table.Header fullWidth>\n                      <Table.Row>\n                        <Table.HeaderCell />\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Data Type</Table.HeaderCell>\n                        <Table.HeaderCell>isArray</Table.HeaderCell>\n                        <Table.HeaderCell>Position</Table.HeaderCell>\n                        <Table.HeaderCell textAlign=\"center\">\n                          LengthType\n                        </Table.HeaderCell>\n                        <Table.HeaderCell textAlign=\"center\">\n                          Size\n                        </Table.HeaderCell>\n                        <Table.HeaderCell textAlign=\"center\">\n                          MaxArrayElements\n                        </Table.HeaderCell>\n                      </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                      {Object.values(\n                        fields\n                      ).map(({ name, dataType, isArray, position }) => {\n                        return (\n                          <React.Fragment>\n                            <TableRowWithCheckbox\n                              id={name}\n                              name={name}\n                              dataType={dataType}\n                              isArray={isArray}\n                              position={position}\n                              initialState={Object.keys(\n                                selectedFields\n                              ).includes(name)}\n                              box={this.checkbox.bind(this)}\n                              handleChange={this.handleChange}\n                              onLengthTypeChange={this.onLengthTypeChange}\n                            />\n                          </React.Fragment>\n                        );\n                      })}\n                    </Table.Body>\n                  </Table>\n\n                  <Form.Button\n                    positive\n                    fluid\n                    content=\"Submit\"\n                    style={{ marginTop: \"50px\" }}\n                  />\n                </Segment>\n              </Form>\n            </div>\n          </div>\n        </div>\n        <PageFooter />\n      </div>\n    );\n  }\n}\n\nexport default CreateQuerySchema;\n\n/*export default class StickyContent extends Component {\n  contextRef = createRef();\n\n  render() {\n    return (\n      <div>\n        <PageHeading />\n        <div>\n          <Grid stretched centered columns={3} style={{ marginTop: \"3em\" }}>\n            <Grid.Column>\n              <Ref innerRef={this.contextRef}>\n                <Container>\n                  <CreateQuerySchema />\n\n                  <Rail position=\"left\">\n                    <Sticky offset={90} context={this.contextRef}>\n                      <Header as=\"h3\">Reference</Header>\n                      <ReferenceTable />\n                    </Sticky>\n                  </Rail>\n\n                  <Rail position=\"right\">\n                    <Sticky offset={90} context={this.contextRef}>\n                      <Header as=\"h3\">Overview</Header>\n                      <List style={{ padding: \"5px\" }}>\n                        <List.Item>Overview</List.Item>\n                        <List.Item>Examples</List.Item>\n                        <List.Item>Tutorial</List.Item>\n                      </List>\n                    </Sticky>\n                  </Rail>\n                </Container>\n              </Ref>\n            </Grid.Column>\n          </Grid>\n        </div>\n        <PageFooter />\n      </div>\n    );\n  }\n}*/\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\nimport {\n  Dropdown,\n  Form,\n  Button,\n  Input,\n  Segment,\n  Divider,\n  Loader,\n  Message,\n  TextArea,\n  List,\n  Container,\n  Popup,\n  Card\n} from \"semantic-ui-react\";\nimport PageHeading from \"./FixedMenu\";\nimport PageFooter from \"./PageFooter\";\n\nimport axios from \"axios\";\nrequire(\"axios-debug\")(axios);\n\nconst embededOptions = [\n  { key: \"true\", text: \"True\", value: \"true\" },\n  { key: \"false\", text: \"False\", value: \"false\" }\n];\n\nclass CreateQuery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataschemas: [],\n      queryName: \"\",\n      dataSchemaName: \"\",\n      queryschemas: [],\n      selectorField: \"\",\n      queriesUri: \"\",\n      dataChunkSize: 3,\n      selectorValue: \"\",\n      selectorValues: [],\n      isLoading: true\n    };\n  }\n\n  addSelectorValue = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.setState(\n      ({ selectorValues, selectorValue }) => ({\n        selectorValues: [\n          ...selectorValues,\n          ...selectorValue\n            .replace(/\\r?\\n|\\r/g, \"\")\n            .split(\",\")\n            .map(str => str.trim().replace(/^\"(.*)\"$/, \"$1\"))\n        ],\n        selectorValue: \"\"\n      }),\n      () => {\n        console.log(\"selectorValues ---> \", this.state.selectorValues);\n      }\n    );\n  };\n\n  removeSelectorValue(index) {\n    this.setState({\n      selectorValues: this.state.selectorValues.filter((_, i) => i !== index)\n    });\n  }\n\n  handleSelectorValueChange = ({ target: { value } }) => {\n    //makes separate copy of array.\n    this.setState({ selectorValue: value });\n  };\n\n  async componentDidMount() {\n    await this.getSchemas();\n    await this.handleSchemaChange();\n    await this.getQuerySchemas();\n    await this.handleQuerySchemaChange();\n  }\n\n  getSchemas = async () => {\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: \"/querier/api/rest/dataschemas\",\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(data);\n      const dataschemas = data.data;\n\n      this.setState({ dataschemas: dataschemas, isLoading: false });\n\n      console.log(\"This is the dataschema list:\", dataschemas);\n    } catch (error) {\n      console.error(Error(`Error fetching results list: ${error.message}`));\n    }\n  };\n\n  handleSchemaChange = async (e, { value }) => {\n    this.setState({ dataSchemaName: value }, () => {\n      console.log(\"Chosen dataSchema ---> \", this.state.dataSchemaName);\n      //also send a request the selfUri of the selected dataSchema\n    });\n    const schema = this.state.dataschemas.find(schema => schema.name === value);\n    if (schema) {\n      try {\n        const { data } = await axios({\n          method: \"get\",\n          url: schema.selfUri,\n          headers: {\n            Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n          }\n        });\n        console.log(data);\n        this.setState({ queryschemaUri: data.data.querySchemasUri });\n        console.log(\n          \"queryschemaUri from dataschema change ---> \",\n          this.state.queryschemaUri\n        );\n      } catch (error) {\n        console.error(\n          Error(`Error fetching specific schema: ${error.message}`)\n        );\n      }\n    }\n    this.getQuerySchemas();\n  };\n\n  getQuerySchemas = async () => {\n    const { queryschemaUri } = this.state;\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: queryschemaUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(\"Data from queryschemaUri fetch --> \", data);\n      const queryschemas = data.data;\n      this.setState({ queryschemas: queryschemas });\n    } catch (error) {\n      console.error(Error(`Error getting queryschemas: ${error.message}`));\n    }\n  };\n\n  handleQuerySchemaChange = async (e, { value }) => {\n    //handle queryschema dropdown change\n    this.setState({ querySchemaName: value }, () => {\n      console.log(\"Chosen querySchema ---> \", this.state.querySchemaName);\n    });\n    const schema = this.state.queryschemas.find(\n      schema => schema.name === value\n    );\n    if (schema) {\n      const { id, name, selfUri } = schema;\n      this.setState({\n        querySchemaId: id,\n        querySchemaName: name,\n        querySchemaSelfUri: selfUri\n      });\n      try {\n        const { data } = await axios({\n          method: \"get\",\n          url: selfUri,\n          headers: {\n            Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n          }\n        });\n        console.log(\n          \"Specific querySchema data from selfUri request ---> \",\n          data\n        );\n        const queryschema = data.data;\n        this.setState(\n          {\n            queryschema: queryschema,\n            selectorField: queryschema.selectorField,\n            queriesUri: queryschema.queriesUri\n          },\n          () => {\n            console.log(\"queryschema ---> \", queryschema);\n            console.log(\"selectorField ---> \", this.state.selectorField);\n            console.log(\"queriesUri --->\", this.state.queriesUri);\n          }\n        );\n        localStorage.setItem(\"queriesUri\", this.state.queriesUri);\n      } catch (error) {\n        console.error(\n          Error(`Error getting specific querySchema: ${error.message}`)\n        );\n      }\n    }\n  };\n\n  handleChange = (e, { value }) => {\n    this.setState({ dataChunkSize: value }, () => {\n      console.log(\"dataChunkSize ---> \", this.state.dataChunkSize);\n    });\n  };\n\n  handleQueryNameChange = (e, { value }) => {\n    this.setState({ queryName: value }, () => {\n      console.log(\"QueryName entered ---> \", this.state.queryName);\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const {\n      queryName,\n      dataChunkSize,\n      selectorValues,\n      embededSelector\n    } = this.state;\n    console.log(this.state);\n    const queriesUri = localStorage.getItem(\"queriesUri\");\n    axios({\n      method: \"post\",\n      url: `${queriesUri}`,\n      headers: {\n        Accept: \"application/vnd.encryptedquery.enclave+json; version=1\",\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        name: queryName,\n        parameters: {\n          dataChunkSize: dataChunkSize\n        },\n        selectorValues: selectorValues,\n        embedSelector: true\n      })\n    })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => console.log(error.response));\n    this.props.history.push(\"/querystatus\");\n  };\n\n  render() {\n    const {\n      dataschemas,\n      queryschemas,\n      queryName,\n      dataSchemaName,\n      querySchemaName,\n      selectorField,\n      value,\n      dataChunkSize,\n      selectorValues\n    } = this.state;\n\n    return (\n      <div\n        style={{ display: \"flex\", minHeight: \"100vh\", flexDirection: \"column\" }}\n      >\n        <PageHeading />\n        <div style={{ flex: 1 }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flex: \"1\"\n            }}\n          >\n            <div style={{ width: \"900px\" }}>\n              <Form onSubmit={this.handleSubmit}>\n                <Segment style={{ padding: \"5em 1em\" }} vertical>\n                  <Divider horizontal>Query Creation Information</Divider>\n                  <Form.Field required>\n                    <label>Query Name: </label>\n                    <Input\n                      placeholder=\"Enter query Name\"\n                      name=\"queryName\"\n                      value={value}\n                      onChange={this.handleQueryNameChange}\n                      required\n                    />\n                  </Form.Field>\n                  <Form.Field required>\n                    <label>Select a Data Schema</label>\n                    <Dropdown\n                      placeholder=\"Select data schema\"\n                      scrolling\n                      clearable\n                      fluid\n                      selection\n                      search\n                      noResultsMessage=\"Try a different Search\"\n                      multiple={false}\n                      options={dataschemas.map(schema => {\n                        return {\n                          key: schema.id,\n                          text: schema.name,\n                          value: schema.name\n                        };\n                      })}\n                      header=\"PLEASE SELECT A DATASCHEMA\"\n                      value={dataSchemaName}\n                      onChange={this.handleSchemaChange}\n                      required\n                    />\n                  </Form.Field>\n                  <Form.Field required>\n                    <label>Select a Query Schema</label>\n                    <Dropdown\n                      placeholder=\"Select query schema\"\n                      scrolling\n                      clearable\n                      fluid\n                      selection\n                      search\n                      noResultsMessage=\"Try a different Search\"\n                      multiple={false}\n                      options={queryschemas.map(schema => {\n                        return {\n                          key: schema.id,\n                          text: schema.name,\n                          value: schema.name\n                        };\n                      })}\n                      header=\"PLEASE SELECT A QUERYSCHEMA\"\n                      value={querySchemaName}\n                      onChange={this.handleQuerySchemaChange}\n                      required\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>SelectorField used to create the query schema</label>\n                    <Input\n                      fluid\n                      readOnly\n                      multiple={false}\n                      value={selectorField}\n                    />\n                  </Form.Field>\n                </Segment>\n                <Segment style={{ padding: \"5em 1em\" }} vertical>\n                  <Divider horizontal>RUN PARAMETERS</Divider>\n                  <Form.Field required>\n                    <label>Data Chunk Size:</label>\n\n                    <div style={{ display: \"flex\" }}>\n                      <Input\n                        value={dataChunkSize}\n                        onChange={this.handleChange}\n                        type=\"number\"\n                        min=\"1\"\n                        required\n                      />\n                      <Popup\n                        trigger={\n                          <Button\n                            icon=\"info\"\n                            size=\"mini\"\n                            circular\n                            style={{ margin: \"5px\" }}\n                          />\n                        }\n                        content=\"Description about what size does\"\n                      />\n                    </div>\n                  </Form.Field>\n                  <Form.Field required>\n                    <label>Selector Values:</label>\n                    <TextArea\n                      type=\"text\"\n                      placeholder=\"Enter selector values 1-by-1 or as a comma seperated list.\"\n                      value={this.state.selectorValue}\n                      onChange={this.handleSelectorValueChange}\n                      required={!this.state.selectorValues.length}\n                    />\n                    <Button color=\"blue\" fluid onClick={this.addSelectorValue}>\n                      Add Selector Value(s)\n                    </Button>\n                    <ul>\n                      {this.state.selectorValues.map((value, index) => {\n                        return (\n                          <Card>\n                            <Card.Content>\n                              {value}\n                              <Button\n                                size=\"mini\"\n                                compact\n                                floated=\"right\"\n                                basic\n                                color=\"red\"\n                                onClick={this.removeSelectorValue.bind(\n                                  this,\n                                  index\n                                )}\n                              >\n                                X\n                              </Button>\n                            </Card.Content>\n                          </Card>\n                        );\n                      })}\n                    </ul>\n                  </Form.Field>\n                  <Form.Button\n                    fluid\n                    positive\n                    content=\"Submit Query\"\n                    style={{ marginTop: \"80px\" }}\n                  />\n                </Segment>\n              </Form>\n            </div>\n          </div>\n        </div>\n        <PageFooter />\n      </div>\n    );\n  }\n}\n\nexport default CreateQuery;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport createHistory from \"history/createBrowserHistory\";\nimport PageHeading from \"./FixedMenu\";\nimport PageFooter from \"./PageFooter\";\nimport _ from \"lodash\";\n\nimport {\n  Divider,\n  Segment,\n  Container,\n  Header,\n  Table,\n  Form,\n  Dropdown,\n  Loader,\n  Button\n} from \"semantic-ui-react\";\n\nimport axios from \"axios\";\n\nclass QueryStatus extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataschemas: [],\n      queryName: \"\",\n      queryschemas: [],\n      dataSchemaName: \"\",\n      queriesUri: \"\",\n      queries: [],\n      column: null,\n      direction: null,\n      querySelfUri: \"\"\n    };\n  }\n\n  //invoke data fetch function inside interval timeout as well as outside of it\n  // async componentDidMount() {\n  //   await this.getSchemas();\n  //   await this.handleSchemaChange();\n  //   await this.getQuerySchemas();\n  //   await this.handleQuerySchemaChange();\n  //   await this.getQueryData();\n  //   this.interval = setInterval(() => this.getQueryData(), 7000);\n  // }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    await this.getSchemas();\n    await this.handleSchemaChange();\n    await this.getQuerySchemas();\n    await this.handleQuerySchemaChange();\n    await this.getQueryData();\n    this.interval = setInterval(() => this.getQueryData(), 5000);\n  }\n\n  //prevent memory leak\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getSchemas = async () => {\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: \"/querier/api/rest/dataschemas\",\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(data);\n      const dataschemas = data.data;\n\n      this.setState({ dataschemas: dataschemas, isLoading: false });\n\n      console.log(\"This is the dataschema list:\", dataschemas);\n    } catch (error) {\n      console.error(Error(`Error fetching results list: ${error.message}`));\n    }\n  };\n\n  handleSchemaChange = async (e, { value }) => {\n    this.setState({ dataSchemaName: value }, () => {\n      console.log(\"Chosen dataSchema ---> \", this.state.dataSchemaName);\n      //also send a request the selfUri of the selected dataSchema\n    });\n    const schema = this.state.dataschemas.find(schema => schema.name === value);\n    if (schema) {\n      try {\n        const { data } = await axios({\n          method: \"get\",\n          url: schema.selfUri,\n          headers: {\n            Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n          }\n        });\n        console.log(data);\n        this.setState({ queryschemaUri: data.data.querySchemasUri });\n        console.log(\n          \"queryschemaUri from dataschema change ---> \",\n          this.state.queryschemaUri\n        );\n      } catch (error) {\n        console.error(\n          Error(`Error fetching specific schema: ${error.message}`)\n        );\n      }\n    }\n    this.getQuerySchemas();\n  };\n\n  getQuerySchemas = async () => {\n    const { queryschemaUri } = this.state;\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: queryschemaUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(\"Data from queryschemaUri fetch --> \", data);\n      const queryschemas = data.data;\n      this.setState({ queryschemas: queryschemas });\n    } catch (error) {\n      console.error(Error(`Error getting queryschemas: ${error.message}`));\n    }\n  };\n\n  handleQuerySchemaChange = async (e, { value }) => {\n    //handle queryschema dropdown change\n    this.setState({ querySchemaName: value }, () => {\n      console.log(\"Chosen querySchema ---> \", this.state.querySchemaName);\n    });\n    const schema = this.state.queryschemas.find(\n      schema => schema.name === value\n    );\n    if (schema) {\n      const { id, name, selfUri } = schema;\n      this.setState({\n        querySchemaId: id,\n        querySchemaName: name,\n        querySchemaSelfUri: selfUri\n      });\n      try {\n        const { data } = await axios({\n          method: \"get\",\n          url: selfUri,\n          headers: {\n            Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n          }\n        });\n        console.log(\n          \"Specific querySchema data from selfUri request ---> \",\n          data\n        );\n        const queryschema = data.data;\n        this.setState({\n          queryschema: queryschema,\n          queriesUri: queryschema.queriesUri\n        });\n        console.log(\"queryschema ---> \", queryschema);\n        console.log(\"queriesUri --->\", this.state.queriesUri);\n        localStorage.setItem(\"queriesUri\", this.state.queriesUri);\n      } catch (error) {\n        console.error(\n          Error(`Error getting specific querySchema: ${error.message}`)\n        );\n      }\n    }\n    this.getQueryData();\n  };\n\n  getQueryData = async () => {\n    //get query data using queriesUri from above\n    const { queriesUri } = this.state;\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: queriesUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(\"queriesUri data --> \", data.data);\n      const queries = data.data;\n      this.setState({\n        queries: queries,\n        querySelfUri: data.data[0].selfUri\n      });\n      console.log(this.state.querySelfUri);\n    } catch (error) {\n      console.error(Error(`Error getting queriesUri data: ${error.message}`));\n    }\n  };\n\n  handleSort = clickedColumn => () => {\n    const { column, queries, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(queries, [clickedColumn]),\n        direction: \"ascending\"\n      });\n      return;\n    }\n\n    this.setState({\n      data: queries.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  handleButtonView = (status, querySelfUri) => {\n    switch (status) {\n      case `Created`:\n        return <Button className=\"btnNoAction\"> NO ACTION </Button>;\n      case `Encrypting`:\n        return <Button> ENCRYPTING ... </Button>;\n      case `Encrypted`:\n        return (\n          <Button\n            onClick={e => this.scheduleQuery(e, querySelfUri)}\n            type=\"button\"\n          >\n            SCHEDULE\n          </Button>\n        );\n      case `Scheduled`:\n        return (\n          <React.Fragment>\n            <Button\n              onClick={e => this.viewSchedules(e, querySelfUri)}\n              type=\"button\"\n            >\n              VIEW SCHEDULES{\" \"}\n            </Button>\n            <Button\n              onClick={e => this.scheduleAgain(e, querySelfUri)}\n              type=\"button\"\n            >\n              SCHEDULE AGAIN{\" \"}\n            </Button>\n          </React.Fragment>\n        );\n      case `Failed`:\n        return <Button color=\"red\"> Failed </Button>;\n      default:\n        return null;\n    }\n  };\n\n  scheduleQuery = async (e, querySelfUri) => {\n    // Handle schedule button interaction\n    // Only when status = ENCRYPTED, goes to Schedule Query Page.\n    e.preventDefault();\n    await this.setState({ querySelfUri });\n    localStorage.setItem(\"querySelfUri\", this.state.querySelfUri);\n    console.log(\n      \"This query will be used to load info on the next page:\",\n      this.state.querySelfUri\n    );\n    this.props.history.push(`/schedulequery`);\n  };\n\n  viewSchedules = async (e, querySelfUri) => {\n    // Handle view schedules button interaction\n    // Only when status = SCHEDULED, goes to Query Schedules Status Page\n    e.preventDefault();\n    await this.setState({ querySelfUri });\n    localStorage.setItem(\"querySelfUri\", this.state.querySelfUri);\n    console.log(\n      \"This query will be used to load info on the next page:\",\n      this.state.querySelfUri\n    );\n    this.props.history.push(`/queryschedulesstatus`);\n  };\n\n  scheduleAgain = async (e, querySelfUri) => {\n    //function for  scheduling a query multiple times\n    e.preventDefault();\n    await this.setState({ querySelfUri });\n    localStorage.setItem(\"querySelfUri\", this.state.querySelfUri);\n    console.log(\n      \"This query will be used to load info on the next page:\",\n      this.state.querySelfUri\n    );\n    this.props.history.push(`/schedulequery`);\n  };\n\n  render() {\n    const {\n      dataschemas,\n      queryschemas,\n      dataSchemaName,\n      querySchemaName,\n      queries,\n      column,\n      direction\n    } = this.state;\n    const { match: { params: { querySelfUri } } } = this.props;\n\n    return (\n      <div\n        style={{ display: \"flex\", minHeight: \"100vh\", flexDirection: \"column\" }}\n      >\n        <PageHeading />\n        <div style={{ flex: 1 }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flex: \"1\"\n            }}\n          >\n            <div style={{ width: \"1100px\" }}>\n          <Form onSubmit={this.handleSubmit}>\n            <Segment style={{ padding: \"5em 1em\" }} vertical>\n              <Divider horizontal>Query Status</Divider>\n              <Form.Field required>\n                <label>Select a Data Schema</label>\n                <Dropdown\n                  placeholder=\"Select data schema\"\n                  scrolling\n                  clearable\n                  fluid\n                  selection\n                  search\n                  noResultsMessage=\"Try a different Search\"\n                  multiple={false}\n                  options={dataschemas.map(schema => {\n                    return {\n                      key: schema.id,\n                      text: schema.name,\n                      value: schema.name\n                    };\n                  })}\n                  header=\"PLEASE SELECT A DATASCHEMA\"\n                  value={dataSchemaName}\n                  onChange={this.handleSchemaChange}\n                  required\n                />\n              </Form.Field>\n              <Form.Field required>\n                <label>Select a Query Schema</label>\n                <Dropdown\n                  placeholder=\"Select query schema\"\n                  scrolling\n                  clearable\n                  fluid\n                  selection\n                  search\n                  noResultsMessage=\"Try a different Search\"\n                  multiple={false}\n                  options={queryschemas.map(schema => {\n                    return {\n                      key: schema.id,\n                      text: schema.name,\n                      value: schema.name\n                    };\n                  })}\n                  header=\"PLEASE SELECT A QUERYSCHEMA\"\n                  value={querySchemaName}\n                  onChange={this.handleQuerySchemaChange}\n                  required\n                />\n              </Form.Field>\n            </Segment>\n          </Form>\n\n          <Divider horizontal>QUERIES TABLE</Divider>\n          <Table sortable compact celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell\n                  sorted={column === \"name\" ? direction : null}\n                  onClick={this.handleSort(\"name\")}\n                >\n                  Query Name\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  sorted={column === \"id\" ? direction : null}\n                  onClick={this.handleSort(\"id\")}\n                >\n                  Query Id\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  sorted={column === \"selfUri\" ? direction : null}\n                  onClick={this.handleSort(\"selfUri\")}\n                >\n                  SelfUri\n                </Table.HeaderCell>\n                <Table.HeaderCell\n                  sorted={column === \"status\" ? direction : null}\n                  onClick={this.handleSort(\"status\")}\n                >\n                  Status\n                </Table.HeaderCell>\n                <Table.HeaderCell>Action</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {Object.values(queries).map(({ name, selfUri, status, id }) => {\n                return (\n                  <Table.Row>\n                    <Table.Cell>{name}</Table.Cell>\n                    <Table.Cell>{id}</Table.Cell>\n                    <Table.Cell>{selfUri}</Table.Cell>\n                    <Table.Cell>{status}</Table.Cell>\n                    <Table.Cell>\n                      {this.handleButtonView(status, selfUri)}\n                    </Table.Cell>\n                  </Table.Row>\n                );\n              })}\n            </Table.Body>\n          </Table>\n        </div>\n        </div>\n        </div>\n          <PageFooter />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(QueryStatus);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\nimport {\n  Dropdown,\n  Segment,\n  Header,\n  Divider,\n  Container,\n  Form,\n  Input\n} from \"semantic-ui-react\";\nimport \"../css/ScheduleQuery.css\";\nimport Datetime from \"react-datetime\";\n\nimport PageHeading from \"./FixedMenu\";\nimport PageFooter from \"./PageFooter.js\";\n\nimport axios from \"axios\";\nimport moment from \"moment\";\nrequire(\"react-datetime\");\n\nconst offsetOptions = [\n  {\n    text: \"From Earliest\",\n    value: \"fromEarliest\",\n    description: \"All data on kafka topic\"\n  },\n  {\n    text: \"From Latest Commit\",\n    value: \"fromLatestCommit\",\n    description: \"Any new data\"\n  },\n  {\n    text: \"From Latest\",\n    value: \"fromLatest\",\n    description: \"Data from the last time the query was ran\"\n  }\n];\n\nconst submissionOptions = [\n  {\n    text: \"Save for Export\",\n    value: \"saveForExport\",\n    description: \"Schedule will not be exectued immediately\"\n  },\n  {\n    text: \"Submit Online\",\n    value: \"submitOnline\",\n    description: \"Schedule will execute at given time\"\n  }\n];\n\nclass StreamingParams extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      kafkaOffset: \"\"\n    };\n  }\n\n  render() {\n    const { kafkaOffset, onKafkaOffsetSelectionChange, checked } = this.props;\n\n    return (\n      <div className=\"params-boxes\">\n        <div>\n          <label>maxHitsPerSelector:</label>\n          <input\n            type=\"number\"\n            name=\"maxHitsPerSelector\"\n            value={this.state.maxHitsPerSelector}\n            onChange={this.props.handleChange}\n            placeholder=\"10000\"\n            min=\"1\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <div>\n          <label>Indefinite runTime:</label>\n          <input\n            type=\"checkbox\"\n            name=\"checked\"\n            checked={this.state.checked}\n            onChange={e => this.props.handleCheckboxChange(e.target.checked)}\n          />\n        </div>\n        {!checked && (\n          <div>\n            <label>runTimeSeconds:</label>\n            <input\n              type=\"number\"\n              name=\"runTimeSeconds\"\n              value={this.state.runTimeSeconds}\n              onChange={this.props.handleChange}\n              placeholder=\"1\"\n              min=\"1\"\n              step=\"1\"\n              required\n            />\n          </div>\n        )}\n        <div>\n          <label>windowLengthSeconds:</label>\n          <input\n            type=\"number\"\n            name=\"windowLengthSeconds\"\n            value={this.state.windowLengthSeconds}\n            onChange={this.props.handleChange}\n            placeholder=\"1\"\n            min=\"1\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <div>\n          <label>kafka offset: </label>\n          <Dropdown\n            placeholder=\"Select offset position\"\n            clearable\n            fluid\n            selection\n            options={offsetOptions}\n            header=\"PLEASE SELECT A KAFKA START OFFSET POSITION\"\n            label=\"kafkaOffset\"\n            onChange={onKafkaOffsetSelectionChange}\n            value={kafkaOffset}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass BatchParams extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div classNam=\"params-boxes\">\n        <div>\n          <label>maxHitsPerSelector:</label>\n          <input\n            type=\"number\"\n            name=\"maxHitsPerSelector\"\n            value={this.state.maxHitsPerSelector}\n            onChange={this.props.handleChange}\n            placeholder=\"10000\"\n            min=\"1\"\n            step=\"1\"\n            required\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ScheduleQuery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: [],\n      queryName: \"\",\n      querySchemaName: \"\",\n      datasources: [],\n      dataSourceName: \"\",\n      dataSourcesUri: \"\",\n      processingMode: \"\",\n      description: \"\",\n      kafkaOffset: \"\",\n      maxHitsPerSelector: 10000,\n      windowLengthSeconds: 1,\n      runTimeSeconds: 1,\n      submissionValue: \"\",\n      checked: false,\n      date: new Date()\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleKafkaOffsetSelectionChange = this.handleKafkaOffsetSelectionChange.bind(\n      this\n    );\n  }\n\n  async componentDidMount() {\n    await this.getQueryData();\n    await this.getDataSources();\n    await this.dataSourceChange();\n  }\n\n  getQueryData = async () => {\n    var querySelfUri = localStorage.getItem(\"querySelfUri\");\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: querySelfUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(\"Data from first call --->\", data);\n      const query = data.data;\n      const includedData = data;\n\n      const dataSourceInfo = includedData.included.filter(\n        element => element.type === \"DataSchema\"\n      );\n\n      const dataSourcesUri = dataSourceInfo.map(function(included) {\n        return included[\"dataSourcesUri\"];\n      });\n\n      const dataSchemaName = dataSourceInfo.map(function(included) {\n        return included[\"name\"];\n      });\n\n      const querySchemaInfo = includedData.included.filter(\n        element => element.type === \"QuerySchema\"\n      );\n\n      const querySchemaName = querySchemaInfo.map(function(included) {\n        return included[\"name\"];\n      });\n\n      this.setState(\n        {\n          query: query,\n          queryName: query.name,\n          dataSourcesUri: dataSourcesUri,\n          dataSchemaName: dataSchemaName,\n          querySchemaName: querySchemaName,\n          schedulesUri: query.schedulesUri\n        },\n        () => {\n          console.log(\"Query name ---> \", this.state.queryName);\n          console.log(\"Datasources Uri ---> \", this.state.dataSourceUri);\n          console.log(\"Dataschema name ---> \", this.state.dataSchemaName);\n          console.log(\"Queryschema name --->\", this.state.querySchemaName);\n          console.log(\"SchedulesUri ---> \", this.state.schedulesUri);\n        }\n      );\n    } catch (error) {\n      console.error(Error(`Error getting query data: ${error.message}`));\n    }\n  };\n\n  getDataSources = async () => {\n    const { dataSourcesUri } = this.state;\n    console.log(\"DataSourcesUri for next request ---> \", dataSourcesUri);\n    //get data sources\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: dataSourcesUri[0],\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      const datasources = data.data;\n      this.setState({\n        datasources: datasources\n      });\n      console.log(\"datasources --->\", datasources);\n    } catch (error) {\n      console.error(Error(`Error get data sources: ${error.message}`));\n    }\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log([e.target.name]);\n  };\n\n  dataSourceChange = async (e, { value }) => {\n    this.setState({ dataSourceName: value }, () => {\n      console.log(\"Chosen data source name ---> \", this.state.dataSourceName);\n    });\n    const source = this.state.datasources.find(source => source.name === value);\n    if (source) {\n      const { id, name, selfUri } = source;\n      this.setState({\n        dataSourceId: id,\n        dataSourceName: name,\n        dataSourceSelfUri: selfUri\n      });\n      console.log(\"Requested datasource selfUri =\", selfUri);\n      try {\n        const { data } = await axios({\n          method: \"get\",\n          url: selfUri,\n          headers: {\n            Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n          }\n        });\n        console.log(\"Specific datasource data --->\", data);\n        const datasource = data.data;\n        this.setState({\n          datasource: datasource,\n          processingMode: datasource.processingMode,\n          description: datasource.description\n        });\n        console.log(\"datasource --->\", datasource);\n        console.log(\"processingMode ---> \", this.state.processingMode);\n        console.log(\"description ---->\", this.state.description);\n      } catch (error) {\n        console.error(\n          Error(`Error getting data source data: ${error.message}`)\n        );\n      }\n    }\n  };\n\n  dateChange = date => this.setState({ date });\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log([e.target.value]);\n  };\n\n  handleKafkaOffsetSelectionChange = (e, data) => {\n    console.log(data.value);\n    this.setState({ kafkaOffset: data.value }, () => {\n      console.log(this.state.kafkaOffset);\n    });\n  };\n\n  handleSubmissionValue = (e, { value }) => {\n    this.setState({ submissionValue: value }, () => {\n      console.log(\"Submission value ---> \", this.state.submissionValue);\n    });\n  };\n\n  handleSubmit = () => {\n    const {\n      processingMode,\n      date,\n      maxHitsPerSelector,\n      dataSourceId,\n      dataSourceSelfUri,\n      windowLengthSeconds,\n      kafkaOffset,\n      checked,\n      runTimeSeconds,\n      schedulesUri\n    } = this.state;\n    if (processingMode === \"Batch\") {\n      console.log(\"---------------------------------------------\");\n      console.log(\"Schedule posting to --->\", schedulesUri);\n      console.log(\"---------------------------------------------\");\n      axios({\n        method: \"post\",\n        url: schedulesUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\",\n          \"Content-Type\": \"application/json\"\n        },\n        data: JSON.stringify({\n          startTime: date,\n          parameters: {\n            maxHitsPerSelector: maxHitsPerSelector\n          },\n          dataSource: {\n            id: dataSourceId,\n            selfUri: dataSourceSelfUri\n          }\n        })\n      })\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => console.log(error.response));\n      this.props.history.push(`/querystatus`);\n    } else {\n      {\n        console.log(\"--------------------------------------------------------\");\n        console.log(\"Schedule posted to --->\", schedulesUri);\n        console.log(\"--------------------------------------------------------\");\n        axios({\n          method: \"post\",\n          url: schedulesUri,\n          headers: {\n            Accept: \"application/vnd.encryptedquery.enclave+json; version=1\",\n            \"Content-Type\": \"application/json\"\n          },\n          data: JSON.stringify({\n            startTime: date,\n            parameters: {\n              maxHitsPerSelector: maxHitsPerSelector,\n              \"stream.window.length.seconds\": windowLengthSeconds,\n              \"kafka.start.offset\": kafkaOffset,\n              \"stream.runtime.seconds\": !checked ? runTimeSeconds : undefined\n            },\n            dataSource: {\n              id: dataSourceId,\n              selfUri: dataSourceSelfUri\n            }\n          })\n        })\n          .then(response => {\n            console.log(response);\n          })\n          .catch(error => console.log(error.response));\n        this.props.history.push(`/querystatus`);\n      }\n    }\n  };\n\n  handleSave = e => {\n    //handle save for export button functionality. The rest service is the same from online submission.\n    // state de-structure\n    const {\n      maxHitsPerSelector,\n      date,\n      dataSourceId,\n      dataSourceSelfUri,\n      schedulesUri\n    } = this.state;\n    axios({\n      method: \"post\",\n      url: schedulesUri,\n      headers: {\n        Accept: \"application/vnd.encryptedquery.enclave+json; version=1\",\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        startTime: date,\n        parameters: {\n          maxHitsPerSelector: maxHitsPerSelector\n        },\n        dataSource: {\n          id: dataSourceId,\n          selfUri: dataSourceSelfUri\n        }\n      })\n    })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => console.log(error.response));\n  };\n\n  render() {\n    const {\n      queryName,\n      dataSchemaName,\n      dataSourceDescription,\n      dataSourceName,\n      processingMode,\n      querySchemaName,\n      datasources,\n      kafkaOffset,\n      submissionValue\n    } = this.state;\n    const { match, location, histoy } = this.props;\n    var yesterday = Datetime.moment().subtract(1, \"day\");\n    var validDate = function(today) {\n      return today.isAfter(yesterday);\n    };\n\n    return (\n      <div\n        style={{ display: \"flex\", minHeight: \"100vh\", flexDirection: \"column\" }}\n      >\n        <PageHeading />\n        <div style={{ flex: 1 }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flex: \"1\"\n            }}\n          >\n            <div style={{ width: \"900px\" }}>\n              <Form onSubmit={this.handleSubmit}>\n                <Segment style={{ padding: \"5em 1em\" }} vertical>\n                  <Divider horizontal>Query Schedule Creation</Divider>\n                  <Form.Field>\n                    <label>Query being used to create this schedule</label>\n                    <Input fluid readOnly multiple={false} value={queryName} />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>\n                      {\" \"}\n                      The query was created using this dataSchema:{\" \"}\n                    </label>\n                    <Input fluid readOnly value={dataSchemaName} />\n                  </Form.Field>\n                  <Form.Field>\n                    <label> Name of Query Schema: </label>\n                    <Input fluid readOnly value={querySchemaName} />\n                  </Form.Field>\n\n                  <Form.Field required>\n                    <label>Choose a datasource:</label>\n                    <Dropdown\n                      placeholder=\"Choose a datasource\"\n                      scrolling\n                      clearable\n                      fluid\n                      selection\n                      search\n                      noResultsMessage=\"Search again\"\n                      multiple={false}\n                      options={datasources.map(source => {\n                        return {\n                          key: source.id,\n                          text: source.name,\n                          value: source.name\n                        };\n                      })}\n                      header=\"SELECT A DATASOURCE\"\n                      value={dataSourceName}\n                      onChange={this.dataSourceChange}\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <label> ProcessingMode of Data Source: </label>\n                    <Input\n                      value={processingMode}\n                      onChange={this.handleChange}\n                      readOnly\n                    />\n                  </Form.Field>\n                </Segment>\n\n                {processingMode && (\n                  <Segment style={{ padding: \"5em 1em\" }} vertical>\n                    <Divider horizontal>Parameters</Divider>\n                    {processingMode && processingMode === \"Batch\" ? (\n                      <BatchParams handleChange={this.handleChange} />\n                    ) : processingMode && processingMode === \"Streaming\" ? (\n                      <StreamingParams\n                        onKafkaOffsetSelectionChange={\n                          this.handleKafkaOffsetSelectionChange\n                        }\n                        kafkaOffset={kafkaOffset}\n                        checked={this.state.checked}\n                        handleChange={this.handleChange}\n                        handleCheckboxChange={newCheckState =>\n                          this.setState({ checked: newCheckState })}\n                      />\n                    ) : null}\n                  </Segment>\n                )}\n\n                <Segment style={{ padding: \"5em 1em\" }} vertical>\n                  <Divider horizontal>Choose a Date </Divider>\n                  <Container style={{ width: \"255px\" }}>\n                    <div>\n                      <Datetime\n                        onChange={this.dateChange}\n                        value={this.state.date}\n                        input={false}\n                        isValidDate={validDate}\n                        open={true}\n                        utc={false}\n                        onClickDay={value => alert(\"day\" + value + \"clicked\")}\n                      />\n                    </div>\n                  </Container>\n                </Segment>\n\n                <Segment style={{ padding: \"5em 1em\" }} vertical>\n                  <Form.Field required>\n                    <label>Choose how to submit:</label>\n                    <Dropdown\n                      scrolling\n                      placeholder=\"Save for Export or Submit Online\"\n                      value={submissionValue}\n                      fluid\n                      selection\n                      multiple={false}\n                      search\n                      noResultsMessage=\"Save for Export or Submit Online\"\n                      options={submissionOptions}\n                      onChange={this.handleSubmissionValue}\n                      required\n                    />\n                  </Form.Field>\n                  <Form.Button\n                    positive\n                    fluid\n                    content=\"Submit Schedule\"\n                    style={{ marginTop: \"50px\" }}\n                  />\n                </Segment>\n              </Form>\n            </div>\n          </div>\n        </div>\n        <PageFooter />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ScheduleQuery);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport localforage from \"localforage\";\n\nimport { Divider, Table, Segment, Button } from \"semantic-ui-react\";\n\nimport axios from \"axios\";\nimport format from \"date-fns/format\";\n\nimport PageFooter from \"./PageFooter\";\nimport PageHeading from \"./FixedMenu\";\n\nimport _ from \"lodash\";\n\nconst indexTuple = source =>\n  source.reduce((prev, [k, v]) => ((prev[k] = v), prev), {});\n\nclass QueryResults extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      results: [],\n      retrievalUris: {},\n      decryptionUris: {},\n      column: null,\n      direction: null\n    };\n  }\n\n  async componentDidMount() {\n    localforage\n      .getItem(\"decryptionUriStore\")\n      .then(localforageStore => {\n        // This code runs once the value has been loaded\n        // from the offline store.\n        console.log(\"localforage store in cDM ---> \", localforageStore);\n        this.setState({ decryptionUris: localforageStore || {} });\n      })\n      .catch(\n        error => console.log(\"Error getting store from localforage --->\", error)\n        // This code runs if there were any errors\n      );\n    await this.getResultsList();\n    await this.getResultsData();\n    this.interval = setInterval(() => this.getResultsList(), 8000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getResultsList = async () => {\n    //fetch basic result(s) list\n    try {\n      const resultsUri = localStorage.getItem(\"resultsUri\");\n      console.log(\n        \"Initial vlaue for resultsUri in getResultsList: \",\n        resultsUri\n      );\n      const { data } = await axios({\n        method: \"get\",\n        url: `${resultsUri}`,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n\n      console.log(\"data.data\", data.data);\n      const results = data.data;\n      this.setState({ results: results });\n\n      console.log(\"This is the list of results from getResultsList: \", results);\n    } catch (error) {\n      console.error(Error(`Error fetching results list: ${error.message}`));\n    }\n  };\n\n  getResultsData = async () => {\n    // fetch selfUri's of all available results\n    const { results } = this.state;\n\n    console.log(\"-----------------------------------------------------------\");\n    console.log(\"These are the results list inside getResultsData: \", results);\n    console.log(\"-----------------------------------------------------------\");\n\n    const fetchSelfUri = ({ id, selfUri }) =>\n      axios({\n        method: \"get\",\n        url: selfUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      }).then(({ data }) => [[id], data.data.retrievalsUri]);\n\n    const fetchResultsSelfUri = ({ id, selfUri }) =>\n      axios({\n        method: \"get\",\n        url: selfUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      }).then(({ data }) => [[id], data.data]);\n\n    try {\n      const retrievalUriList = await Promise.all(results.map(fetchSelfUri));\n      const resultsSelfUriList = await Promise.all(\n        results.map(fetchResultsSelfUri)\n      );\n\n      const retrievalUris = indexTuple(retrievalUriList);\n      const resultObjects = indexTuple(resultsSelfUriList);\n\n      console.log(\n        \"These are the retrievalUri's from each result\",\n        retrievalUris\n      );\n      console.log(\n        \"These are the objects returned from resultSelfUri requests\",\n        resultObjects\n      );\n\n      this.setState({ retrievalUris, resultObjects });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  getDecryptionUris = async id => {\n    /* \n    Handle case where we come into this page and the result is already downloaded outside of the component.\n    This will cause the sendRetrieval function to be skipped because there will be\n    no download button, thus not getting the decryptionUri to render the Decrpyt button.\n    */\n\n    const retrievalsUri = this.state.retrievalUris[id];\n    console.log(`Getting ${this.state.retrievalUris[id]}`);\n\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: retrievalsUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      const decryptionsUri = data.data[0].decryptionsUri;\n      console.log(\"decryptionsUri is ----->\", decryptionsUri);\n\n      this.setState(\n        prevState => {\n          prevState.decryptionUris[id] = decryptionsUri;\n          return {\n            decryptionUris: prevState.decryptionUris\n          };\n        },\n        () => {\n          console.log(\"prevState call back\", this.decryptionUris);\n        }\n      );\n      localforage\n        .setItem(\"decryptionUriStore\", this.state.decryptionUris)\n        .then(response => {\n          console.log(\"Store in getDecryptionUris() \", response);\n        })\n        .catch(error => {\n          console.error(\"Error setting object to localforage ---> \", error);\n        });\n      console.log(\"State after localforage \", this.state);\n      console.log(\"Decrypting: \", decryptionsUri);\n      const response = await axios({\n        method: \"post\",\n        url: decryptionsUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      const decryptionResponse = response.data.data;\n      console.log(\"Decryption response -->\", decryptionResponse);\n    } catch (error) {\n      console.error(\"getDecryptionUris error\", error);\n    }\n  };\n\n  sendRetrieval = async id => {\n    // handle download button that will send the post retrieval\n    const retrievalsUri = this.state.retrievalUris[id];\n\n    console.log(`Posting to ${retrievalsUri}`);\n\n    try {\n      const { data } = await axios({\n        method: \"post\",\n        url: retrievalsUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n\n      const decryptionsUri = data.data.decryptionsUri;\n\n      console.log(\"decryptionsUri is: \", decryptionsUri);\n      console.log(this.state);\n\n      this.setState(prevState => {\n        prevState.decryptionUris[id] = decryptionsUri;\n        return {\n          decryptionUris: prevState.decryptionUris\n        };\n      });\n      localforage\n        .setItem(\"decryptionUriStore\", this.state.decryptionUris)\n        .then(response => {\n          console.log(\"Response in sendRetrieval of the store --->>\", response);\n        })\n        .catch(error => console.log(\"SendRetrieval localforage error\", error));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  sendDecryption = id => {\n    //Handle Decrypt Action\n\n    const decryptionsUri = this.state.decryptionUris[id];\n\n    console.log(decryptionsUri);\n\n    axios({\n      method: \"post\",\n      url: decryptionsUri,\n      headers: {\n        Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n      }\n    });\n  };\n\n  handleSort = clickedColumn => () => {\n    const { column, queries, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(queries, [clickedColumn]),\n        direction: \"ascending\"\n      });\n      return;\n    }\n\n    this.setState({\n      data: queries.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  renderButtonView = (idx, status) => {\n    const { id } = this.state.results[idx];\n    const retrievalsUri = this.state.retrievalUris[id];\n    const decryptionsUri = this.state.decryptionUris[id];\n\n    switch (status) {\n      case `Ready`:\n        return (\n          <button onClick={() => this.sendRetrieval(id)} type=\"button\">\n            DOWNLOAD\n          </button>\n        );\n      case `Downloading`:\n        return <button> DOWNLOADING ... </button>;\n      case `Downloaded`:\n        return (\n          <button onClick={() => this.getDecryptionUris(id)} type=\"button\">\n            DECRYPT\n          </button>\n        );\n      case `Decrypting`:\n        return <button> DECRYPTING ...</button>;\n      case `InProgress`:\n        return <button> INPROGRESS</button>;\n      case `Decrypted`:\n        return <button> DECRYPTED </button>;\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    const { results, direction, column } = this.state;\n    const { match, location, history } = this.props;\n\n    return (\n      <div\n        style={{ display: \"flex\", minHeight: \"100vh\", flexDirection: \"column\" }}\n      >\n        <PageHeading />\n        <div style={{ flex: 1 }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flex: \"1\"\n            }}\n          >\n            <div style={{ width: \"1100px\" }}>\n              <Segment style={{ padding: \"5em 1em\" }}>\n                <Divider horizontal>Retrievals & Results</Divider>\n                <Table sortable compact celled>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell\n                        sorted={column === \"id\" ? direction : null}\n                        onClick={this.handleSort(\"id\")}\n                      >\n                        Query Id\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"start\" ? direction : null}\n                        onClick={this.handleSort(\"start\")}\n                      >\n                        Start\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"end\" ? direction : null}\n                        onClick={this.handleSort(\"end\")}\n                      >\n                        End\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Type</Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"status\" ? direction : null}\n                        onClick={this.handleSort(\"status\")}\n                      >\n                        Status\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Action</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {Object.values(\n                      results\n                    ).map(\n                      (\n                        { id, type, windowStartTime, windowEndTime, status },\n                        idx\n                      ) => {\n                        return (\n                          <Table.Row>\n                            <Table.Cell>{id}</Table.Cell>\n                            <Table.Cell>\n                              {format(\n                                windowStartTime,\n                                \"MMMM Do YYYY, h:mm:ss A\"\n                              )}\n                            </Table.Cell>\n                            <Table.Cell>\n                              {format(windowEndTime, \"MMMM Do YYYY, h:mm:ss A\")}\n                            </Table.Cell>\n                            <Table.Cell>{type}</Table.Cell>\n                            <Table.Cell>{status}</Table.Cell>\n                            <Table.Cell>\n                              {this.renderButtonView(idx, status)}\n                            </Table.Cell>\n                          </Table.Row>\n                        );\n                      }\n                    )}\n                  </Table.Body>\n                </Table>\n              </Segment>\n            </div>\n          </div>\n        </div>\n        <PageFooter />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(QueryResults);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport format from \"date-fns/format\";\n\nimport createHistory from \"history/createBrowserHistory\";\nimport PageHeading from \"./FixedMenu\";\nimport PageFooter from \"./PageFooter\";\n\nimport styled from \"styled-components\";\n\nimport {\n  Table,\n  Button,\n  Segment,\n  Header,\n  Icon,\n  Divider,\n  Message\n} from \"semantic-ui-react\";\nimport _ from \"lodash\";\n\nconst indexTuple = source =>\n  source.reduce((prev, [k, v]) => ((prev[k] = v), prev), {});\n\nclass QuerySchedulesStatus extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      schedules: [],\n      dataSourceNames: [],\n      resultUris: {},\n      column: null,\n      direciton: null,\n      exportSlider: false\n    };\n\n    //this.handleChange = this.handleChange.bind(this)\n  }\n\n  async componentDidMount() {\n    await this.getSchedulesList();\n    await this.getScheduleResultUris();\n    await this.getDataSourceNames();\n    this.interval = setInterval(() => this.getSchedulesList(), 30000);\n  }\n\n  componentWillUnmount() {\n    //clear the interval\n    clearInterval(this.interval);\n  }\n\n  getSchedulesList = async () => {\n    const querySelfUri = localStorage.getItem(\"querySelfUri\");\n    try {\n      const data = await axios({\n        method: \"get\",\n        url: querySelfUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(\"data from querySelfUri request\", data);\n      const querySelfUriResponse = data.data.data;\n      console.log(\"querySelfUriResponse --->\", querySelfUriResponse);\n\n      this.setState(\n        {\n          querySchedulesUri: querySelfUriResponse.schedulesUri,\n          queryName: querySelfUriResponse.name\n        },\n        () => {\n          console.log(this.state.querySchedulesUri);\n          console.log(this.state.queryName);\n        }\n      );\n      const querySchedulesUriResponse = await axios({\n        method: \"get\",\n        url: this.state.querySchedulesUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(\n        \"data from querySchedulesUri request\",\n        querySchedulesUriResponse\n      );\n      //data.data will produce the data object as well as the included object\n      //data.data.data will produce just the data of the data object.\n      const schedules = querySchedulesUriResponse.data.data;\n      this.setState({\n        schedules\n      });\n    } catch (error) {\n      console.error(\"Error getting querySelfUri\", error);\n    }\n  };\n\n  getScheduleResultUris = async () => {\n    //gets result URIs of each schedule\n    const { schedules } = this.state;\n\n    console.log(\"Schedules inside getScheduleResultUris()\", schedules);\n\n    const fetchSelfUri = ({ id, selfUri }) =>\n      axios({\n        method: \"get\",\n        url: selfUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      }).then(({ data }) => [[id], data.data.resultsUri]);\n    try {\n      const resultUriList = await Promise.all(schedules.map(fetchSelfUri));\n      console.log(\"resultUriList --->\", resultUriList);\n      const resultUris = indexTuple(resultUriList);\n      console.log(\"These are the resultUris from each schedule: \", resultUris);\n\n      this.setState({ resultUris });\n    } catch (error) {\n      console.error(\n        \"Error getting each schedule and setting the resultUri\",\n        error\n      );\n    }\n  };\n\n  getDataSourceNames = async () => {\n    const schedules = this.state.schedules;\n    // const { schedules } = this.state;\n\n    console.log(\"Schedules data inside getDataSourceNames()\", schedules);\n\n    try {\n      Promise.all(\n        schedules.map(schedule =>\n          axios({\n            method: \"get\",\n            url: schedule.selfUri,\n            headers: {\n              Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n            }\n          })\n        )\n      ).then(response => {\n        console.log(response);\n        const dataSourceNames = response.flatMap(\n          ({ data: { included } }, idx) =>\n            included.reduce((memo, { type, name }) => {\n              if (type === \"DataSource\") {\n                memo.push(name);\n              }\n              return memo;\n            }, [])\n        );\n        console.log(dataSourceNames);\n        this.setState(prevState => ({\n          schedules: prevState.schedules.map((schedule, idx) => {\n            return {\n              ...schedule,\n              dataSourceNames\n            };\n          })\n        }));\n      });\n    } catch (error) {\n      console.error(\"Error getting data source names\", error);\n    }\n  };\n\n  getResultDetails = async id => {\n    const resultsUri = this.state.resultUris[id];\n    console.log(`Load queryResults page with this resultsUri ${resultsUri}`);\n\n    console.log(`Setting ${resultsUri} to localstorage item resultsUri `);\n    localStorage.setItem(\"resultsUri\", resultsUri);\n\n    //page redirect\n    this.props.history.push(`/queryresults`);\n  };\n\n  renderButtonView = (idx, status) => {\n    const { id } = this.state.schedules[idx];\n    const resultsUri = this.state.resultUris[id];\n\n    switch (status) {\n      case `Pending`:\n        return <button className=\"btnNoAction\"> PENDING ... </button>;\n      case `InProgress`:\n        return <button> IN PROGRESS ... </button>;\n      case `Complete`:\n        return (\n          <button onClick={() => this.getResultDetails(id)} type=\"button\">\n            GET DETAILS\n          </button>\n        );\n      case `Failed`:\n        return <button> FAILED </button>;\n      default:\n        return null;\n    }\n  };\n\n  handleSort = clickedColumn => () => {\n    const { column, queries, direction } = this.state;\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(queries, [clickedColumn]),\n        direction: \"ascending\"\n      });\n      return;\n    }\n\n    this.setState({\n      data: queries.reverse(),\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\n    });\n  };\n\n  render() {\n    const {\n      schedules,\n      column,\n      direction,\n      dataSourceNames,\n      queryName\n    } = this.state;\n    const { match, location, history } = this.props;\n\n    return (\n      <div\n        style={{ display: \"flex\", minHeight: \"100vh\", flexDirection: \"column\" }}\n      >\n        <PageHeading />\n        <div style={{ flex: 1 }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flex: \"1\"\n            }}\n          >\n            <div style={{ width: \"1200px\" }}>\n              <Segment style={{ padding: \"5em 1em\" }} vertical>\n                <Message\n                  header={`${queryName} scheduled jobs`}\n                  content={`Schedules for ${queryName} are shown below. Data Source names are displayed. Jobs may take a while to complete, this page automatically updates.`}\n                />\n                <Divider style={{ marginTop: \"2em\" }} horizontal>\n                  Query Schedules Status\n                </Divider>\n                <Table sortable compact celled>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell\n                        sorted={column === \"date\" ? direction : null}\n                        onClick={this.handleSort(\"date\")}\n                      >\n                        Date\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"type\" ? direction : null}\n                        onClick={this.handleSort(\"type\")}\n                      >\n                        Type\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"id\" ? direction : null}\n                        onClick={this.handleSort(\"id\")}\n                      >\n                        Schedule Id\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"selfUri\" ? direction : null}\n                        onClick={this.handleSort(\"selfUri\")}\n                      >\n                        selfUri\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"datasource\" ? direction : null}\n                        onClick={this.handleSort(\"datasource\")}\n                      >\n                        Data Source\n                      </Table.HeaderCell>\n                      <Table.HeaderCell\n                        sorted={column === \"status\" ? direction : null}\n                        onClick={this.handleSort(\"status\")}\n                      >\n                        Status\n                      </Table.HeaderCell>\n                      <Table.HeaderCell>Results</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {Object.values(\n                      schedules\n                    ).map(\n                      (\n                        {\n                          startTime,\n                          selfUri,\n                          type,\n                          status,\n                          id,\n                          dataSourceNames,\n                          index\n                        },\n                        idx\n                      ) => {\n                        return (\n                          <Table.Row>\n                            <Table.Cell>\n                              {\" \"}\n                              {format(startTime, \"MMMM Do YYYY, h:mm:ss A\")}\n                            </Table.Cell>\n                            <Table.Cell>{type}</Table.Cell>\n                            <Table.Cell>{id}</Table.Cell>\n                            <Table.Cell>{selfUri}</Table.Cell>\n                            <Table.Cell>\n                              {dataSourceNames && dataSourceNames[idx]}\n                            </Table.Cell>\n                            <Table.Cell>{status}</Table.Cell>\n                            <Table.Cell>\n                              {this.renderButtonView(idx, status)}\n                            </Table.Cell>\n                          </Table.Row>\n                        );\n                      }\n                    )}\n                  </Table.Body>\n                </Table>\n              </Segment>\n            </div>\n          </div>\n        </div>\n        <PageFooter />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(QuerySchedulesStatus);\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport HeaderLogo from \"../ENQUERY_final_RGB.png\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  List,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar,\n  Visibility\n} from \"semantic-ui-react\";\nimport \"../css/styles.css\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nconst CustomSegment = styled(Segment)`\n  &&& {\n    background-color: gray;\n  }\n`;\n\nconst HomepageHeading = ({ mobile }) => (\n  <Container text>\n    <Header\n      as=\"h1\"\n      content=\"Encrypted Query\"\n      inverted\n      style={{\n        fontSize: mobile ? \"2em\" : \"4em\",\n        fontWeight: \"normal\",\n        marginBottom: 0,\n        marginTop: mobile ? \"1.5em\" : \"3em\"\n      }}\n    >\n      <Image\n        src={HeaderLogo}\n        size=\"massive\"\n        style={{ width: \"360px\", height: \"auto\" }}\n      />\n    </Header>\n    <Header\n      as=\"h2\"\n      content=\"Encrypted Query\"\n      inverted\n      style={{\n        fontSize: mobile ? \"1.5em\" : \"1.7em\",\n        fontWeight: \"normal\",\n        marginTop: mobile ? \"0.5em\" : \"1.5em\"\n      }}\n    />\n  </Container>\n);\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => this.setState({ fixed: false });\n  showFixedMenu = () => this.setState({ fixed: true });\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { children } = this.props;\n    const { fixed, activeItem } = this.state;\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <CustomSegment\n            textAlign=\"center\"\n            style={{ minHeight: 500, padding: \"0em 0em\" }}\n            vertical\n          >\n            <Menu\n              fixed={fixed ? \"top\" : null}\n              inverted={fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size=\"large\"\n            >\n              <Container>\n                <Menu.Item header>EnQuery</Menu.Item>\n                <Menu.Item\n                  className=\"menu_color_white\"\n                  as={Link}\n                  to=\"/\"\n                  name=\"home\"\n                  active={activeItem === \"home\"}\n                  onClick={this.handleItemClick}\n                >\n                  Home\n                </Menu.Item>\n                <Menu.Item\n                  as={Link}\n                  className=\"menu_color_white\"\n                  to=\"/createQuerySchema\"\n                  name=\"createQuerySchema\"\n                  active={activeItem === \"createQuerySchema\"}\n                  onClick={this.handleItemClick}\n                >\n                  Create Query Schema\n                </Menu.Item>\n\n                <Menu.Item\n                  as={Link}\n                  className=\"menu_color_white\"\n                  to=\"/createquery\"\n                  name=\"createQuery\"\n                  active={activeItem === \"createQuery\"}\n                  onClick={this.handleItemClick}\n                >\n                  Create Query\n                </Menu.Item>\n\n                <Menu.Item\n                  as={Link}\n                  className=\"menu_color_white\"\n                  to=\"/querystatus\"\n                  name=\"queryStatus\"\n                  active={activeItem === \"queryStatus\"}\n                  onClick={this.handleItemClick}\n                >\n                  Query Status\n                </Menu.Item>\n                <Menu.Menu position=\"right\">\n                  <Menu.Item\n                    className=\"menu_color_white\"\n                    position=\"right\"\n                    href=\"https://github.com/En-Query/EncryptedQuery\"\n                    target=\"_blank\"\n                  >\n                    <Icon name=\"github\" size=\"big\" />\n                  </Menu.Item>\n                                    <Menu.Item\n                    className=\"menu_color_white\"\n                    as={Link}\n                    to=\"/versions\"\n                    name=\"versions\"\n                    active={activeItem === \"versions\"}\n                    onClick={this.handleItemClick}\n                    position=\"right\"\n                    style={{ textDecoration: \"underline\" }}\n                  >\n                    2.1.2\n                  </Menu.Item>\n                  <Menu.Item\n                    className=\"menu_color_white\"\n                    as={Link}\n                    to=\"/offline\"\n                    name=\"offline\"\n                    active={activeItem === \"offline\"}\n                    onClick={this.handleItemClick}\n                    position=\"right\"\n                  >\n                    Offline Mode\n                  </Menu.Item>\n                </Menu.Menu>\n              </Container>\n            </Menu>\n            <HomepageHeading />\n          </CustomSegment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node\n};\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const { children } = this.props;\n    const { sidebarOpened, activeItem } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"push\"\n          inverted\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item header>EnQuery</Menu.Item>\n          <Menu.Item\n            as={Link}\n            to=\"/\"\n            name=\"home\"\n            active={activeItem === \"home\"}\n            onClick={this.handleItemClick}\n          >\n            Home\n          </Menu.Item>\n          <Menu.Item\n            as={Link}\n            to=\"/createqueryschema\"\n            name=\"createqueryschema\"\n            active={activeItem === \"createQuerySchema\"}\n            onClick={this.handleItemClick}\n          >\n            Create Query Schema\n          </Menu.Item>\n\n          <Menu.Item\n            as={Link}\n            to=\"/createquery\"\n            name=\"createQuery\"\n            active={activeItem === \"createQuery\"}\n            onClick={this.handleItemClick}\n          >\n            Create Query\n          </Menu.Item>\n\n          <Menu.Item\n            as={Link}\n            to=\"/querystatus\"\n            name=\"queryStatus\"\n            active={activeItem === \"queryStatus\"}\n            onClick={this.handleItemClick}\n          >\n            Query Status\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: 350, padding: \"1em 0em\" }}\n            vertical\n          >\n            <Container>\n              <Menu inverted pointing secondary size=\"large\">\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name=\"sidebar\" />\n                </Menu.Item>\n              </Menu>\n            </Container>\n            <HomepageHeading mobile />\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node\n};\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>{\" \"}\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n);\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node\n};\n\nconst PageHeading = () => <ResponsiveContainer />;\nexport default PageHeading;\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\nimport PageHeading from \"./PageHeader\";\nimport PageFooter from \"./PageFooter\";\n\nexport default class PageNotFound extends React.Component {\n  render() {\n    return (\n      <body>\n        <div\n          style={{\n            display: \"flex\",\n            minHeight: \"100vh\",\n            flexDirection: \"column\"\n          }}\n        >\n          <PageHeading />\n          <div style={{ flex: 1 }}>\n            <Message\n              header=\"YIKES! This page does not exist! \"\n              content=\"Oops looks like this page does not exisit. Please use the menu above to reach your desired page.\"\n            />\n          </div>\n          <PageFooter />\n        </div>\n      </body>\n    );\n  }\n}\n","import React from \"react\";\nimport { Tab, Dropdown, Form } from \"semantic-ui-react\";\n\nconst defaultDropdownOptions = {\n  scrolling: true,\n  clearable: true,\n  fluid: true,\n  selection: true,\n  search: true,\n  required: true,\n  multiple: false,\n  noResultsMessage: \"Try a different Search\"\n};\n\nexport const Tab1Content = () => {\n  //upload file button\n};\n\nexport const ExportSchedulesDropdowns = ({\n  dropdownOptionsDataSchema,\n  dropdownOptionsQuerySchema,\n  dropdownOptionsQuery\n}) => {\n  return (\n    <Tab.Pane>\n      <Form>\n        <Form.Field required>\n          <label>Select a Data Schema</label>\n          <Dropdown\n            {...{ ...defaultDropdownOptions, ...dropdownOptionsDataSchema }}\n          />\n        </Form.Field>\n        <Form.Field required>\n          <label>Select a Query Schema</label>\n          <Dropdown\n            {...{ ...defaultDropdownOptions, ...dropdownOptionsQuerySchema }}\n          />\n        </Form.Field>\n        <Form.Field required>\n          <label>Select a Query</label>\n          <Dropdown\n            {...{ ...defaultDropdownOptions, ...dropdownOptionsQuery }}\n          />\n        </Form.Field>\n      </Form>\n    </Tab.Pane>\n  );\n};\n\nexport const Tab3Content = () => {\n  //import results\n};\n","import React, { Component } from \"react\";\nimport { Table, Checkbox } from \"semantic-ui-react\";\nimport format from \"date-fns/format\";\n\nexport default class TableRowWithSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    const { initialState } = this.props;\n    this.state = {\n      exportSlider: initialState\n    };\n  }\n\n  slider = () => {\n    this.setState({ exportSlider: !this.state.exportSlider }, () => {\n      console.log(\"slider --> \", this.state.exportSlider);\n      const { id, startTime, selfUri, status, slide } = this.props;\n      slide({\n        id,\n        startTime,\n        selfUri,\n        status,\n        isExported: this.state.exportSlider\n      });\n    });\n  };\n\n  render() {\n    const { id, startTime, selfUri, status } = this.props;\n    const { exportSlider } = this.state;\n    return (\n      <React.Fragment>\n        <Table.Row>\n          <Checkbox slider onChange={this.slider} />\n          <Table.Cell>{id}</Table.Cell>\n          <Table.Cell>{format(startTime, \"MMM Do YYYY, h:mm:ss A\")}</Table.Cell>\n          <Table.Cell>{selfUri}</Table.Cell>\n          <Table.Cell>{status}</Table.Cell>\n        </Table.Row>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Message,\n  Divider,\n  Segment,\n  Tab,\n  Icon,\n  Loader,\n  Dimmer,\n  Table,\n  Progress\n} from \"semantic-ui-react\";\n\nimport PageHeading from \"./FixedMenu\";\nimport PageFooter from \"./PageFooter.js\";\n\nimport axios, { put } from \"axios\";\nimport format from \"date-fns/format\";\n\nimport { ExportSchedulesDropdowns } from \"./Tabs\";\nimport TableRowWithSlider from \"./TableRowWithSlider\";\n\nexport default class OfflineMode extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      fileName: \"\",\n      dataschemas: [],\n      dataSchemaName: \"\",\n      queryschemas: [],\n      querySchemaName: \"\",\n      queries: [],\n      queryName: \"\",\n      queriesUri: \"\",\n      schedules: [],\n      exportSlider: false,\n      scheduleIdsToExport: [],\n      schedulesToExport: {}\n    };\n  }\n\n  async componentDidMount() {\n    //get data for schedules dropdown\n    await this.getSchemas();\n    await this.handleSchemaChange();\n    await this.getQuerySchemas();\n    await this.handleQuerySchemaChange();\n    await this.getQueryData();\n    await this.handleQueryChange();\n    await this.getSchedules();\n  }\n\n  getSchemas = async () => {\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: \"/querier/api/rest/dataschemas\",\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(data);\n      const dataschemas = data.data;\n\n      this.setState({ dataschemas: dataschemas, isLoading: false });\n\n      console.log(\"This is the dataschema list:\", dataschemas);\n    } catch (error) {\n      console.error(Error(`Error fetching results list: ${error.message}`));\n    }\n  };\n\n  handleSchemaChange = async (e, { value }) => {\n    this.setState({ dataSchemaName: value }, () => {\n      console.log(\"Chosen dataSchema ---> \", this.state.dataSchemaName);\n      //also send a request the selfUri of the selected dataSchema\n    });\n    const schema = this.state.dataschemas.find(schema => schema.name === value);\n    if (schema) {\n      try {\n        const { data } = await axios({\n          method: \"get\",\n          url: schema.selfUri,\n          headers: {\n            Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n          }\n        });\n        console.log(data);\n        this.setState({ queryschemaUri: data.data.querySchemasUri });\n        console.log(\n          \"queryschemaUri from dataschema change ---> \",\n          this.state.queryschemaUri\n        );\n      } catch (error) {\n        console.error(\n          Error(`Error fetching specific schema: ${error.message}`)\n        );\n      }\n    }\n    this.getQuerySchemas();\n  };\n\n  getQuerySchemas = async () => {\n    const { queryschemaUri } = this.state;\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: queryschemaUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(\"Data from queryschemaUri fetch --->\", data);\n      const queryschemas = data.data;\n      this.setState({ queryschemas: queryschemas });\n    } catch (error) {\n      console.error(Error(`Error getting queryschemas: ${error.message}`));\n    }\n  };\n\n  handleQuerySchemaChange = async (e, { value }) => {\n    //handle queryschema dropdown change\n    this.setState({ querySchemaName: value }, () => {\n      console.log(\"Chosen querySchema --->\", this.state.querySchemaName);\n    });\n    const schema = this.state.queryschemas.find(\n      schema => schema.name === value\n    );\n    if (schema) {\n      const { id, name, selfUri } = schema;\n      this.setState({\n        querySchemaId: id,\n        querySchemaName: name,\n        querySchemaSelfUri: selfUri\n      });\n      try {\n        const { data } = await axios({\n          method: \"get\",\n          url: selfUri,\n          headers: {\n            Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n          }\n        });\n        console.log(\n          \"Specific querySchema data from selfUri request ---> \",\n          data\n        );\n        const queryschema = data.data;\n        this.setState({\n          queryschema: queryschema,\n          queriesUri: queryschema.queriesUri\n        });\n        console.log(\"queryschema ---> \", queryschema);\n        console.log(\"queriesUri --->\", this.state.queriesUri);\n      } catch (error) {\n        console.error(\n          Error(`Error getting specific querySchema: ${error.nessage}`)\n        );\n      }\n    }\n    this.getQueryData();\n  };\n\n  getQueryData = async () => {\n    //get query data\n    const { queriesUri } = this.state;\n    console.log(\"queriesUri inside getQueryData() ---->\", queriesUri);\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: queriesUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      console.log(\"Data from get query --->\", data);\n      const queries = data.data;\n      this.setState({ queries: queries });\n      console.log(\"Queries ---->\", queries);\n    } catch (error) {\n      console.error(Error(`Error getting query data ${error.message}`));\n    }\n  };\n\n  handleQueryChange = async (e, { value }) => {\n    //handle query dropdown change\n    this.setState({ queryName: value }, () => {\n      console.log(\"Chosen query --->\", this.state.queryName);\n    });\n    const query = this.state.queries.find(query => query.name === value);\n    if (query) {\n      const { id, name, selfUri } = query;\n      this.setState({\n        queryId: id,\n        queryName: name,\n        querySelfUri: selfUri\n      });\n      try {\n        const { data } = await axios({\n          method: \"get\",\n          url: selfUri,\n          headers: {\n            Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n          }\n        });\n        console.log(\"Specific query data --->\", data);\n        const query = data.data;\n        this.setState({\n          query: query,\n          schedulesUri: query.schedulesUri\n        });\n        console.log(\"Data of selected query\", query);\n        console.log(\"schedulesUri --->\", this.state.schedulesUri);\n      } catch (error) {\n        console.error(\n          Error(`Error handling query dropdown change ${error.message}`)\n        );\n      }\n    }\n    this.getSchedules();\n  };\n\n  getSchedules = async () => {\n    //get schedules for selected query\n    const { schedulesUri } = this.state;\n    try {\n      const { data } = await axios({\n        method: \"get\",\n        url: schedulesUri,\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n        }\n      });\n      const schedules = data.data;\n      console.log(\"Schedules ---> \", schedules);\n      this.setState({ schedules: schedules });\n    } catch (error) {\n      console.error(Error(`Error getting schedules ${error.message}`));\n    }\n  };\n\n  slider = ({ id, isExported }) => {\n    const obj = this.state.schedules.find(s => Number(s.id) === Number(id));\n    if (isExported === true) {\n      this.setState({\n        schedulesToExport: {\n          ...this.state.schedulesToExport,\n          [id]: {\n            ...obj\n          }\n        }\n      });\n    } else {\n      const newSchedulesToExport = this.state.schedulesToExport;\n      delete newSchedulesToExport[id];\n      this.setState(\n        {\n          schedulesToExport: newSchedulesToExport\n        },\n        () => {\n          console.log(\n            \"Schedules to export --> \",\n            this.state.newSchedulesToExport\n          );\n        }\n      );\n    }\n  };\n\n  onFormSubmit = e => {\n    e.preventDefault(); // Stop form submit\n    this.fileUpload(this.state.file);\n  };\n\n  fileChange = e => {\n    this.setState(\n      { file: e.target.files[0], fileName: e.target.files[0].name },\n      () => {\n        console.log(\n          \"File chosen --->\",\n          this.state.file,\n          console.log(\"File name  --->\", this.state.fileName)\n        );\n      }\n    );\n  };\n\n  fileUpload = file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    axios({\n      method: \"put\",\n      url: \"/querier/api/rest/offline/datasources\",\n      data: formData,\n      headers: {\n        Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n      }\n    })\n      .then(response => {\n        console.log(response);\n        console.log(response.status);\n        this.setState(\n          {\n            statusCode: response.status\n          },\n          () => {\n            console.log(\"Status code --->\", this.state.statusCode);\n          }\n        );\n      })\n      .catch(error => console.log(error));\n  };\n\n  resultUpload = file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    axios({\n      method: \"put\",\n      url: \"/querier/api/rest/offline/result\",\n      data: formData,\n      headers: {\n        Accept: \"application/vnd.encryptedquery.enclave+json; version=1\"\n      }\n    })\n      .then(response => {\n        console.log(response);\n        console.log(response.status);\n        this.setState(\n          {\n            statusCode: response.status\n          },\n          () => {\n            console.log(\"Status code --->\", this.state.statusCode);\n          }\n        );\n      })\n      .catch(error => console.log(error));\n  };\n\n  resultFormSubmit = e => {\n    e.preventDefault();\n    this.resultUpload(this.state.file);\n  };\n\n  exportSchedules = async e => {\n    //hit rest endpoint for export\n    e.preventDefault();\n    const { schedulesToExport } = this.state;\n    try {\n      const { data } = await axios({\n        method: \"post\",\n        url: \"/querier/api/rest/offline/executions\",\n        headers: {\n          Accept: \"application/vnd.encryptedquery.enclave+json; version=1\",\n          \"Content-Type\":\n            \"application/vnd.encryptedquery.enclave+json; version=1\"\n        },\n        data: JSON.stringify({\n          scheduleIds: Object.keys(schedulesToExport).map(Number),\n          type: \"OfflineExecutionExportRequest\"\n        })\n      });\n      console.log(data);\n      const response = data;\n      console.log(\"One data response ---> \", response);\n      this.setState({ scheduleDataToBeExported: response });\n      console.log(this.state.scheduleDataToBeExported);\n      var blob = new Blob([this.state.scheduleDataToBeExported]);\n      var link = document.createElement(\"a\");\n      link.href = window.URL.createObjectURL(blob);\n      link.download = \"exportSchedules.xml\";\n      link.click();\n    } catch (error) {\n      console.error(Error(`Error exporting schedules ${error.message}`));\n    }\n  };\n\n  //Tab panes for upload datasource/schemas, export for schedules, import for results\n\n  render() {\n    const {\n      dataschemas,\n      dataSchemaName,\n      queryschemas,\n      querySchemaName,\n      queries,\n      queryName,\n      schedules,\n      schedulesToExport,\n      fileName,\n      statusCode\n    } = this.state;\n    const panes = [\n      {\n        menuItem: \"Import Datasource\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <Message>\n              The file picker below is used to import & upload the xml file that\n              contains both the Datas Sources and Data Schemas.\n            </Message>\n            <Form onSubmit={this.onFormSubmit}>\n              <Segment style={{ padding: \"5em 1em\" }} vertical>\n                <Form.Field>\n                  <label>File input & upload </label>\n                  <Button\n                    as=\"label\"\n                    htmlFor=\"file\"\n                    type=\"button\"\n                    animated=\"fade\"\n                  >\n                    <Button.Content visible>\n                      <Icon name=\"file\" />\n                    </Button.Content>\n                    <Button.Content hidden>Choose a File</Button.Content>\n                  </Button>\n                  <input\n                    type=\"file\"\n                    id=\"file\"\n                    hidden\n                    onChange={this.fileChange}\n                  />\n                  <Form.Input\n                    fluid\n                    label=\"File Chosen: \"\n                    placeholder=\"Use the above bar to browse your file system\"\n                    readOnly\n                    value={this.state.fileName}\n                  />\n                  <Button style={{ marginTop: \"20px\" }} type=\"submit\">\n                    Upload\n                  </Button>\n                  {statusCode && statusCode === 200 ? (\n                    <Progress\n                      style={{ marginTop: \"20px\" }}\n                      percent={100}\n                      success\n                      progress\n                    >\n                      File Upload Success\n                    </Progress>\n                  ) : statusCode && statusCode === 500 ? (\n                    <Progress\n                      style={{ marginTop: \"20px\" }}\n                      percent={100}\n                      error\n                      active\n                      progress\n                    >\n                      File Upload Failed\n                    </Progress>\n                  ) : null}\n                </Form.Field>\n              </Segment>\n            </Form>\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: \"Export Schedule(s)\",\n        render: () => (\n          <React.Fragment>\n            <ExportSchedulesDropdowns\n              dropdownOptionsDataSchema={{\n                placeholder: \"Select data schema\",\n                options: dataschemas.map(schema => {\n                  return {\n                    key: schema.id,\n                    text: schema.name,\n                    value: schema.name\n                  };\n                }),\n                header: \"PLEASE SELECT A DATASCHEMA\",\n                value: dataSchemaName,\n                onChange: this.handleSchemaChange\n              }}\n              dropdownOptionsQuerySchema={{\n                placeholder: \"Select query schema\",\n                options: queryschemas.map(schema => {\n                  return {\n                    key: schema.id,\n                    text: schema.name,\n                    value: schema.name\n                  };\n                }),\n\n                header: \"PLEASE SELECT A QUERYSCHEMA\",\n                value: querySchemaName,\n                onChange: this.handleQuerySchemaChange\n              }}\n              dropdownOptionsQuery={{\n                placeholder: \" Select query \",\n                options: queries.map(query => {\n                  return {\n                    key: query.id,\n                    text: query.name,\n                    value: query.name\n                  };\n                }),\n\n                header: \"PLEASE SELECT A QUERYSCHEMA\",\n                value: queryName,\n                onChange: this.handleQueryChange\n              }}\n            />\n            <Message attached=\"bottom\" warning>\n              <Icon name=\"help\" />\n              Don't see any Queries?&nbsp;\n              <Link to=\"/createquery\">Create one here</Link>\n              &nbsp;if you don't.\n            </Message>\n            <Divider style={{ padding: \"2em\" }} horizontal>\n              Schedule(s) table\n            </Divider>\n            <Segment>\n              <Dimmer active={schedules && schedules.length < 1}>\n                <Loader inverted>Waiting for Query selection ...</Loader>\n              </Dimmer>\n              <Message\n                attached\n                header=\"Exporting Schedule(s)\"\n                content=\"To export 1-to-many schedules please click the slider next to each schedule.\"\n              />\n              {schedules && (\n                <Table celled compact definition>\n                  <Table.Header fullWidth>\n                    <Table.Row>\n                      <Table.HeaderCell />\n                      <Table.HeaderCell>Id</Table.HeaderCell>\n                      <Table.HeaderCell>Scheduled For</Table.HeaderCell>\n                      <Table.HeaderCell>Self Uri</Table.HeaderCell>\n                      <Table.HeaderCell>Status</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n\n                  <Table.Body>\n                    {Object.values(schedules).map(\n                      ({ id, startTime, selfUri, status }) => {\n                        return (\n                          <TableRowWithSlider\n                            id={id}\n                            key={id}\n                            startTime={startTime}\n                            selfUri={selfUri}\n                            status={status}\n                            initialState={Object.keys(\n                              schedulesToExport\n                            ).includes(id)}\n                            slide={this.slider.bind(this)}\n                          />\n                        );\n                      }\n                    )}\n                  </Table.Body>\n                  <Table.Footer fullWidth>\n                    <Table.Row>\n                      <Table.HeaderCell />\n                      <Table.HeaderCell colSpan=\"4\">\n                        {\" \"}\n                        <Button\n                          floated=\"right\"\n                          icon\n                          labelPosition=\"left\"\n                          primary\n                          size=\"small\"\n                          onClick={this.getSchedules}\n                        >\n                          <Icon name=\"refresh\" /> Refresh Schedules\n                        </Button>\n                      </Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Footer>\n                </Table>\n              )}\n            </Segment>\n            <Divider style={{ padding: \"2em\" }} horizontal>\n              EXPORT SCHEDULE(S) TABLE\n            </Divider>\n            <Segment>\n              <Dimmer active={schedules && schedules.length < 1}>\n                <Loader inverted />\n              </Dimmer>\n              <Message>\n                The schedules listed below will be exported upon button\n                interaction\n              </Message>\n              {schedules && (\n                <Table celled compact definition>\n                  <Table.Header fullWidth>\n                    <Table.Row>\n                      <Table.HeaderCell>Id</Table.HeaderCell>\n                      <Table.HeaderCell>Scheduled For</Table.HeaderCell>\n                      <Table.HeaderCell>Self Uri</Table.HeaderCell>\n                      <Table.HeaderCell>Status</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n\n                  <Table.Body>\n                    {Object.keys(schedulesToExport).map(key => {\n                      const schedule = schedulesToExport[key];\n                      return (\n                        <Table.Row>\n                          <Table.Cell>{schedule.id}</Table.Cell>\n                          <Table.Cell>\n                            {format(\n                              schedule.startTime,\n                              \"MMM Do YYYY, h:mm:ss A\"\n                            )}\n                          </Table.Cell>\n                          <Table.Cell>{schedule.selfUri}</Table.Cell>\n                          <Table.Cell>{schedule.status}</Table.Cell>\n                        </Table.Row>\n                      );\n                    })}\n                  </Table.Body>\n                  <Table.Footer fullWidth>\n                    <Table.Row>\n                      <Table.HeaderCell colSpan=\"4\">\n                        <Button\n                          floated=\"left\"\n                          icon\n                          labelPosition=\"left\"\n                          primary\n                          size=\"small\"\n                          onClick={this.exportSchedules}\n                        >\n                          <Icon name=\"send\" />\n                          Export All\n                        </Button>\n                      </Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Footer>\n                </Table>\n              )}\n            </Segment>\n          </React.Fragment>\n        )\n      },\n      {\n        menuItem: \"Import Results\",\n        render: () => (\n          <Tab.Pane attached={false}>\n            <Message>Some message about importing results</Message>\n            <Form onSubmit={this.resultFormSubmit}>\n              <Segment style={{ padding: \"5em 1em\" }} vertical>\n                <Form.Field>\n                  <label>Result File Upload</label>\n                  <Button\n                    as=\"label\"\n                    htmlFor=\"file\"\n                    type=\"button\"\n                    animated=\"fade\"\n                  >\n                    <Button.Content visible>\n                      <Icon name=\"file\" />\n                    </Button.Content>\n                    <Button.Content hidden>Choose a File</Button.Content>\n                  </Button>\n                  <input\n                    type=\"file\"\n                    id=\"file\"\n                    hidden\n                    onChange={this.fileChange}\n                  />\n                  <Form.Input\n                    fluid\n                    label=\"File Chosen: \"\n                    placeholder=\"Use the above bar to browse your file system\"\n                    readOnly\n                    value={this.state.fileName}\n                  />\n                  <Button style={{ marginTop: \"20px\" }} type=\"submit\">\n                    Upload\n                  </Button>\n                  {statusCode && statusCode === 200 ? (\n                    <Progress\n                      style={{ marginTop: \"20px\" }}\n                      percent={100}\n                      success\n                      progress\n                    >\n                      File Upload Success\n                    </Progress>\n                  ) : statusCode && statusCode === 500 ? (\n                    <Progress\n                      style={{ marginTop: \"20px\" }}\n                      percent={100}\n                      error\n                      active\n                      progress\n                    >\n                      File Upload Failed\n                    </Progress>\n                  ) : null}\n                </Form.Field>\n              </Segment>\n            </Form>\n          </Tab.Pane>\n        )\n      }\n    ];\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            display: \"flex\",\n            minHeight: \"100vh\",\n            flexDirection: \"column\"\n          }}\n        >\n          <PageHeading />\n          <div style={{ flex: 1 }}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                flex: \"1\"\n              }}\n            >\n              <div style={{ width: \"1100px\" }}>\n                <Segment style={{ padding: \"5em 1em\" }} vertical>\n                  <Divider horizontal>OFFLINE USAGE</Divider>\n                  <Tab menu={{ pointing: true }} panes={panes} />\n                </Segment>\n              </div>\n            </div>\n          </div>\n          <PageFooter />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Segment,\n  Divider,\n  List,\n  Container,\n  Header,\n  Table\n} from \"semantic-ui-react\";\nimport PageHeading from \"./FixedMenu\";\n\nfunction Versions() {\n  return (\n    <div>\n      <PageHeading />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <div\n          style={{\n            width: \"700px\"\n          }}\n        >\n          <Header\n            style={{ padding: \"30px 0\", fontSize: \"3rem\", marginTop: \"2em\" }}\n          >\n            Encrypted Query Versions\n            <Header.Subheader style={{ marginTop: \"20px\", fontSize: \"1rem\" }}>\n              This product is still in its early stages so new versions are\n              released often. Sometimes minor changes, sometimes very major\n              changes. Please check the docs/release notes of the latest\n              versioning before using\n            </Header.Subheader>\n          </Header>\n          <Table style={{ marginTop: \"50px\" }} celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell\n                  colSpan=\"3\"\n                  style={{ fontSize: \"1.5rem\", paddingLeft: \".4em\" }}\n                >\n                  Current Version (Stable)\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>2.1.3</Table.Cell>\n                <Table.Cell>\n                  <a href=\"https://github.com/En-Query/EncryptedQuery/blob/master/Release-Notes.md#encrypted-query-v213---release-notes\">\n                    Release Notes\n                  </a>\n                </Table.Cell>\n                <Table.Cell>\n                  <a href=\"#\">Documentation</a>\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n\n          <Table celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell\n                  colSpan=\"3\"\n                  style={{ fontSize: \"1.5rem\", paddingLeft: \".4em\" }}\n                >\n                  Past Versions\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>2.1.2</Table.Cell>\n                <Table.Cell>\n                  <a href=\"https://github.com/En-Query/EncryptedQuery/blob/master/Release-Notes.md#encrypted-query-v212---release-notes\">\n                    Release Notes\n                  </a>\n                </Table.Cell>\n                <Table.Cell>\n                  <a href=\"#\">Documentation</a>\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>2.1.1</Table.Cell>\n                <Table.Cell>\n                  <a href=\"https://github.com/En-Query/EncryptedQuery/blob/master/Release-Notes.md#changes-in-release-211\">\n                    Release Notes\n                  </a>\n                </Table.Cell>\n                <Table.Cell>\n                  <a href=\"#\">Documentation</a>\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>2.1.0</Table.Cell>\n                <Table.Cell>\n                  <a href=\"https://github.com/En-Query/EncryptedQuery/blob/master/Release-Notes.md#new-with-release-210\">\n                    Release Notes\n                  </a>\n                </Table.Cell>\n                <Table.Cell>\n                  <a href=\"#\">Documentation</a>\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>2.0.1</Table.Cell>\n                <Table.Cell>\n                  <a href=\"https://github.com/En-Query/EncryptedQuery/blob/master/Release-Notes.md#release-201-snapshot\">\n                    Release Notes\n                  </a>\n                </Table.Cell>\n                <Table.Cell>\n                  <a href=\"#\">Documentation</a>\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell>1</Table.Cell>\n                <Table.Cell>\n                  <a href=\"#\">Release Notes</a>\n                </Table.Cell>\n                <Table.Cell>\n                  <a href=\"#\">Documentation</a>\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Versions;\n","import _ from \"lodash\";\nimport React, { Component, createRef } from \"react\";\nimport {\n  Grid,\n  Header,\n  Image,\n  Rail,\n  Ref,\n  Segment,\n  Sticky,\n  Container,\n  List\n} from \"semantic-ui-react\";\n\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport styled from \"styled-components\";\n\nimport PageHeading from \"./FixedMenu\";\nimport PageFooter from \"./PageFooter\";\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\n\nconst Placeholder = () => (\n  <Image src=\"https://react.semantic-ui.com/images/wireframe/paragraph.png\" />\n);\n\nconst Docs = () => (\n  <React.Fragment>\n    <Header style={{ padding: \"10px 0\", fontSize: \"2rem\" }}>Overview</Header>\n    <p style={{ marginTop: \"5px\", fontSize: \"1rem\" }}>\n      This product is still in its early stages so new versions are released\n      often. Sometimes minor changes, sometimes very major changes.\n    </p>\n    <p style={{ fontSize: \"1.2em\" }}>\n      <b>\n        Please check the docs/release notes of the latest version(s) before\n        using this product.\n      </b>\n    </p>\n    <List ordered style={{ marginTop: \"20px\" }}>\n      <List.Item>\n        <Link activeStyle={{ color: \"red\" }} to=\"overview#create-query-schema\">\n          Create Query Schema\n        </Link>\n      </List.Item>\n      <List.Item>\n        <Link to=\"overview#create-query\">Create Query</Link>\n      </List.Item>\n      <List.Item>\n        <Link to=\"overview#query-status\">Query Status</Link>\n        <List.List>\n          <List.Item>\n            <Link to=\"overview#schedule-query\">Schedule Query</Link>\n          </List.Item>\n          <List.Item>View Schedules</List.Item>\n          <List.Item>View Results</List.Item>\n        </List.List>\n      </List.Item>\n      <List.Item>\n        <Link to=\"overview#offline\">Offline Mode</Link>\n      </List.Item>\n    </List>\n    <Header id=\"motivation\" style={{ padding: \"10px 0\", fontSize: \"2rem\" }}>\n      Motivation\n    </Header>\n    <p style={{ fontSize: \"1rem\" }}>\n      Encrypted Query is designed to allow a user to query a remote database\n      without revealing the contents of the query or the results from the\n      database server. This is accomplished using techniques from Private\n      Information Retrieval (PIR) with Paillier encryption.{\" \"}\n    </p>\n    <p style={{ fontSize: \"1em\" }}>\n      Encrypted Query has two distinct sides - the Querier and the Responder.\n      <List animated bulleted style={{ padding: \"20px\" }}>\n        <List.Item>\n          The Querier prepares encrypted queries which are then submitted to the\n          Responder.\n        </List.Item>\n        <List.Item>\n          The Responder accepts encrypted queries and executes them on selected\n          data sources without revealing the criteria contained in the query, or\n          the data that is returned.\n        </List.Item>\n      </List>\n      All records of the selected data source are scanned during query\n      execution.\n    </p>\n    <Header\n      id=\"create-query-schema\"\n      style={{ padding: \"30px 0\", fontSize: \"2rem\" }}\n    >\n      Create Query Schema\n      <Header.Subheader style={{ fontSize: \"1.2rem\" }}>\n        BLAH BLAH BLAH BLAH BLAH BLAH BLAH BLAH BLAH BLAH BLAH BLAH BLAH BLAH\n        BLAH BLAH BLAH BLAH BLAH BLAH BLAH BLAH\n      </Header.Subheader>\n    </Header>\n    <Header id=\"create-query\" style={{ fontSize: \"2rem\" }}>\n      Create Query\n      <Header.Subheader style={{ fontSize: \"1.2rem\" }}>\n        {\" \"}\n        RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT\n        RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT\n        RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT\n        RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT RANDOM TEXT\n        RANDOM TEXT RANDOM TEXT{\" \"}\n      </Header.Subheader>\n    </Header>\n    <Header id=\"query-status\" style={{ fontSize: \"2rem\" }}>\n      Query Status\n    </Header>\n    <p style={{ fontSize: \"1.2rem\" }}>\n      some information on query schema process\n    </p>\n    <Header id=\"schedule-query\" style={{ fontSize: \"2rem\" }}>\n      Schedule Query\n      <Header.Subheader style={{ fontSize: \"1.2rem\" }} />\n    </Header>\n    <Header id=\"query-schedules-status\" style={{ fontSize: \"2rem\" }}>\n      Query Schedules Status\n      <Header.Subheader style={{ fontSize: \"1rem\" }} />\n    </Header>\n    <Header id=\"query-results\" style={{ fontSize: \"2rem\" }}>\n      Query Results\n      <Header.Subheader style={{ fontSize: \"1rem\" }} />\n    </Header>\n    <Header id=\"offline-mode\" style={{ fontSize: \"2rem\" }}>\n      Offline Mode\n      <Header.Subheader style={{ fontSize: \"1rem\" }} />\n    </Header>\n  </React.Fragment>\n);\n\nexport default class Overview extends Component {\n  contextRef = createRef();\n\n  render() {\n    return (\n      <div\n        style={{ display: \"flex\", minHeight: \"100vh\", flexDirection: \"column\" }}\n      >\n        <PageHeading />\n        <div style={{ flex: 1 }}>\n          <Grid centered columns={3} style={{ marginTop: \"3em\" }}>\n            <Grid.Column>\n              <Ref innerRef={this.contextRef}>\n                <Container>\n                  <Docs />\n\n                  <Rail position=\"left\">\n                    <Sticky offset={90} context={this.contextRef}>\n                      <Header as=\"h3\">Getting Started</Header>\n                      <List style={{ padding: \"5px\" }}>\n                        <List.Item>Overview</List.Item>\n                        <List.Item>Examples</List.Item>\n                        <List.Item>Tutorial</List.Item>\n                      </List>\n                      <Header as=\"h3\">End to End Query Creation</Header>\n                      <List style={{ padding: \"5px\" }}>\n                        <List.Item>\n                          <a href=\"#createqueryschema\">Create Query Schema</a>\n                        </List.Item>\n                        <List.Item>\n                          <a href=\"#createquery\">Create Query</a>\n                        </List.Item>\n                        <List.Item>\n                          <a href=\"#querystatus\">Query Status</a>\n                        </List.Item>\n                      </List>\n                      <Header as=\"h3\">How To</Header>\n                      <List style={{ padding: \"5px\" }}>\n                        <List.Item>\n                          <a\n                            target=\"_blank\"\n                            href=\"https://github.com/En-Query/EncryptedQuery/blob/master/doc/Building-README.md#building-the-project\"\n                          >\n                            Building\n                          </a>\n                        </List.Item>\n                        <List.Item>Standalone</List.Item>\n                        <List.Item>Deployment</List.Item>\n                      </List>\n                      <Header as=\"h3\">Development</Header>\n                      <List style={{ padding: \"5px\" }}>\n                        <List.Item>Road Map</List.Item>\n                        <List.Item>Upcoming Features</List.Item>\n                      </List>\n                    </Sticky>\n                  </Rail>\n\n                  <Rail position=\"right\">\n                    <Sticky offset={90} context={this.contextRef}>\n                      <List style={{ padding: \"5px\" }}>\n                        <List.Item>\n                          <Link smooth to=\"overview#motivation\">\n                            Motivation\n                          </Link>\n                        </List.Item>\n                        <List.Item>\n                          <StyledLink smooth to=\"overview#create-query-schema\">\n                            Create Query Schema\n                          </StyledLink>\n                        </List.Item>\n                        <List.Item>\n                          <Link smooth to=\"overview#create-query\">\n                            Create Query\n                          </Link>\n                        </List.Item>\n                        <List.Item>\n                          <Link smooth to=\"overview#query-status\">\n                            Query Status\n                          </Link>\n                          <List.List>\n                            <List.Item>\n                              <Link to=\"overview#schedule-query\">\n                                Schedule Query\n                              </Link>\n                            </List.Item>\n                            <List.Item>\n                              <Link smooth to=\"overview#query-schedules-status\">\n                                Query Schedules Status\n                              </Link>\n                            </List.Item>\n                            <List.Item>\n                              <Link smooth to=\"overview#query-results\">\n                                Query Results\n                              </Link>\n                            </List.Item>\n                          </List.List>\n                        </List.Item>\n                        <List.Item>\n                          <Link smooth to=\"overview#offline-mode\">\n                            Offline Mode\n                          </Link>\n                        </List.Item>\n                      </List>\n                    </Sticky>\n                  </Rail>\n                </Container>\n              </Ref>\n            </Grid.Column>\n          </Grid>\n        </div>\n        <PageFooter />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  BrowserHistory,\n  HashRouter\n} from \"react-router-dom\";\nimport HomepageLayout from \"../components/HomepageLayout.js\";\nimport CreateQuerySchema from \"../components/CreateQuerySchema\";\nimport CreateQuery from \"../components/CreateQuery\";\nimport QueryStatus from \"../components/QueryStatus\";\nimport ScheduleQuery from \"../components/ScheduleQuery\";\nimport QueryResults from \"../components/QueryResults\";\nimport QuerySchedulesStatus from \"../components/QuerySchedulesStatus\";\nimport PageNotFound from \"../components/PageNotFound\";\nimport OfflineMode from \"../components/OfflineMode\";\nimport Versions from \"../components/Versions\";\nimport Overview from \"../components/Overview\";\n\nexport default () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" component={HomepageLayout} exact />\n      <Route path=\"/createqueryschema\" component={CreateQuerySchema} exact />\n      <Route path=\"/createquery\" component={CreateQuery} exact />\n      <Route path=\"/querystatus\" component={QueryStatus} exact />\n      <Route path=\"/schedulequery\" component={ScheduleQuery} exact />\n      <Route\n        path=\"/queryschedulesstatus\"\n        component={QuerySchedulesStatus}\n        exact\n      />\n      <Route path=\"/queryresults\" component={QueryResults} exact />\n      <Route path=\"/offline\" component={OfflineMode} exact />\n      <Route path=\"/versions\" component={Versions} exact />\n      <Route path=\"/overview\" component={Overview} />\n      <Route component={PageNotFound} />\n    </Switch>\n  </HashRouter>\n);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n\n\t\t     \n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport Routes from \"./routes\";\n\nimport CreateQuerySchema from \"./components/CreateQuerySchema\";\nimport CreateQuery from \"./components/CreateQuery\";\nimport ScheduleQuery from \"./components/ScheduleQuery\";\nimport QueryStatus from \"./components/QueryStatus\";\nimport QueryResults from \"./components/QueryResults\";\nimport QuerySchedulesStatus from \"./components/QuerySchedulesStatus\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport Versions from \"./components/Versions\";\nimport Overview from \"./components/Overview\";\n\nimport {\n  BrowserRouter,\n  Router,\n  Route,\n  Switch,\n  Redirect,\n  HashRouter\n} from \"react-router-dom\";\n\nexport default () => <Routes />;\n"],"sourceRoot":""}