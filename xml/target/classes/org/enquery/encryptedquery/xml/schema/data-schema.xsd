<?xml version="1.0" encoding="UTF-8" ?>
<!-- ~ Licensed to the Apache Software Foundation (ASF) under one or more 
	~ contributor license agreements. See the NOTICE file distributed with ~ 
	this work for additional information regarding copyright ownership. ~ The 
	ASF licenses this file to You under the Apache License, Version 2.0 ~ (the 
	"License"); you may not use this file except in compliance with ~ the License. 
	You may obtain a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 
	~ ~ Unless required by applicable law or agreed to in writing, software ~ 
	distributed under the License is distributed on an "AS IS" BASIS, ~ WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ~ See the 
	License for the specific language governing permissions and ~ limitations 
	under the License. -->
<xs:schema
	targetNamespace="http://enquery.net/encryptedquery/dataschema"
	xmlns="http://enquery.net/encryptedquery/dataschema"
	xmlns:ds="http://enquery.net/encryptedquery/dataschema"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified">

	<xs:element name="dataSchema" type="dataSchema">
		<xs:unique name="uniqueFieldNames">
              <xs:selector xpath="ds:field"/>
              <xs:field xpath="ds:name"/>
        </xs:unique>
        <xs:unique name="uniqueFieldPositions">
			<xs:selector xpath="ds:field" />
			<xs:field xpath="ds:position" />
		</xs:unique>
	</xs:element>

	<xs:complexType name="dataSchema">
		<xs:sequence>
			<xs:element name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the data
						schema. The name omits
						leading and trailing whitespace, and is case
						sensitive.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="field" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="name" type="xs:string">
							<xs:annotation>
								<xs:documentation>The name of the data
									element. The name omits
									leading and trailing whitespace, and is case
									sensitive.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="dataType" type="xs:string">
							<xs:annotation>
								<xs:documentation>The type of the data
									element. The type name is
									the fully qualified class name, or the
									primitive
									Java type of the
									element.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="isArray" type="xs:boolean"
							default="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Whether or not the schema element is an
									array
									within the data. False if unspecified.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="position" type="xs:int" default="0">
							<xs:annotation>
								<xs:documentation> Index of this field in the data schema. This
									is used to
									be able to lookup fields by position instead of by
									name. In some
									data sources,
									like JDBC, or flat files (TBS, CSV,
									etc.) looking fields by name is
									not possible.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>