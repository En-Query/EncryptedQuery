<?xml version="1.0" encoding="UTF-8" ?>
<!-- ~ Licensed to the Apache Software Foundation (ASF) under one or more ~ contributor license agreements. See the NOTICE file distributed with ~ this work for additional information 
	regarding copyright ownership. ~ The ASF licenses this file to You under the Apache License, Version 2.0 ~ (the "License"); you may not use this file except in compliance with ~ the 
	License. You may obtain a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 ~ ~ Unless required by applicable law or agreed to in writing, software ~ distributed 
	under the License is distributed on an "AS IS" BASIS, ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ~ See the License for the specific language governing 
	permissions and ~ limitations under the License. -->
<xs:schema targetNamespace="http://enquery.net/encryptedquery/clear-response" xmlns="http://enquery.net/encryptedquery/clear-response"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

	<xs:element name="clearTextResponse" type="ClearTextResponse" />

	<xs:complexType name="ClearTextResponse">
		<xs:sequence>
			<xs:element name="queryName" type="xs:normalizedString"/> 
			<xs:element name="queryId" type="xs:normalizedString" />
			<xs:element name="selector" minOccurs="0" maxOccurs="unbounded" type="Selector"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="Selector">
		<xs:sequence>
			<xs:element name="hits" minOccurs="0" maxOccurs="unbounded" type="Hits" />
		</xs:sequence>
		<xs:attribute name="selectorName" use="required" type="xs:normalizedString" />
	</xs:complexType>

	<xs:complexType name="Hits">
		<xs:sequence>
			<xs:element name="hit" minOccurs="0" maxOccurs="unbounded" type="Hit"/>
		</xs:sequence>
		<xs:attribute name="selectorValue" use="required" type="xs:normalizedString" />
	</xs:complexType>

	<xs:complexType name="Hit">
		<xs:sequence>
			<xs:element name="field" minOccurs="0" maxOccurs="unbounded" type="Field"/>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="Field">
		<xs:sequence>
			<xs:element name="name" type="xs:normalizedString" />
			<xs:element name="value" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
						
</xs:schema>