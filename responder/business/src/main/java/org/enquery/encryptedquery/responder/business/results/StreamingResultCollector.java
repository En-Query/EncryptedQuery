/*
 * EncryptedQuery is an open source project allowing user to query databases with queries under
 * homomorphic encryption to securing the query and results set from database owner inspection.
 * Copyright (C) 2018 EnQuery LLC
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Affero General Public License as published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <https://www.gnu.org/licenses/>.
 */
package org.enquery.encryptedquery.responder.business.results;

import java.io.IOException;

import org.enquery.encryptedquery.responder.data.entity.Execution;

/**
 * Collect results generated by a streaming mode query.<br/>
 * The collected results are stored in the <code>ResultRepository</code> and deleted from the
 * directory.
 * 
 * The directory where results are stored are expected to be organized:<br/>
 * <br/>
 * 
 * year/month/day/<br/>
 * <br/>
 * 
 * Under each day directory, thre will be files named as:<br/>
 * <br/>
 * 
 * FROM-TO.xml<br/>
 * <br/>
 * 
 * Where FROM,and TO are the time window boundary of the result, formated as: HHmmss. This is the
 * two digit 24h hour of the day, followed by the two digis minute of the hour, followed by the two
 * digit second of the minute.<br/>
 * <br/>
 * 
 * 
 * Example:<br/>
 * <br/>
 * 
 * 2019/01/09/050000-055959.xml,<br/>
 * 2019/01/09/060000-065949.xml,<br/>
 * 2019/01/22/090920-090929.xml etc.
 * 
 */
public interface StreamingResultCollector {

	public void collect(Execution execution) throws IOException;

}
